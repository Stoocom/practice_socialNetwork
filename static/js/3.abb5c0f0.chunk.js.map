{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","updateStatus","value","onChange","event","target","onDoubleClick","ProfileInfo","profile","className","s","descriptionBlock","src","photos","small","fullname","aboutMe","contacts","facebook","vk","github","lookingForAJob","lookingForAJobDescription","Loader","Post","item","alt","message","countLikes","MyPosts","memo","postsBlock","ReduxDialogsForm","onSubmit","addPost","posts","map","p","key","id","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","myPost__button","MyPostsContainer","connect","state","profilePage","textArea","dispatch","postMessage","addPostActionCreator","Profile","console","log","content","updateStatusThunkCreator","ProfileContainer","userId","this","match","params","authorisedUserId","history","push","getProfileThunkCreator","getStatusThunkCreator","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.abb5c0f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\",\"myPost__button\":\"MyPosts_myPost__button__EzN7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from 'react'\n// import s from './ProfileInfo.module.css';\n// import Loader from '../../common/Preloader/Loader';\n\nclass ProfileStatus extends React.Component {\n    state = {\n        isWatchingInput: false,\n        status: this.props.status\n    }\n\n    activateInput = () => {\n        this.setState({\n            isWatchingInput: true\n        })\n        //this.forceUpdate()\n    }\n\n    deActivateInput = () => {\n        this.setState({\n            isWatchingInput: false\n        })\n        this.props.updateStatus(this.state.status)\n    }\n\n\n    onPostChange = (event) => {\n        this.setState({\n            status: event.target.value\n        })\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <span>\n                {!this.state.isWatchingInput\n                    ?\n                    <div onDoubleClick={this.activateInput}>\n                        Статус: {this.props.status}\n                    </div>\n                    :\n                    <div>\n                        <input\n                            autoFocus={true}\n                            onBlur={this.deActivateInput}\n                            value={this.state.status}\n                            onChange={this.onPostChange}\n                        ></input>\n                    </div>\n                }\n            </span>\n        )\n    }\n}\nexport default ProfileStatus ","import React, { useState, useEffect } from 'react'\n// import s from './ProfileInfo.module.css';\n// import Loader from '../../common/Preloader/Loader';\n\nconst ProfileStatusHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n    // let editMode = stateWithSetState[0]\n    // let setEditMode = stateWithSetState[1]\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n    const onPostChange = (event) => {\n        setStatus(event.target.value)\n    }\n\n    return (\n        <span>\n            {!editMode\n                ?\n                <div onDoubleClick={ activateEditMode }>\n                    Статус: {props.status}\n                </div>\n                :\n                <div>\n                    <input\n                        autoFocus={true}\n                        onBlur={deactivateEditMode}\n                        value={status}\n                        onChange={onPostChange}\n                    ></input>\n                </div>\n            }\n        </span>\n    )\n}\n\nexport default ProfileStatusHooks ","import React from 'react'\nimport s from './ProfileInfo.module.css';\nimport Loader from '../../common/Preloader/Loader';\nimport ProfileStatus from './ProfileStatus';\nimport ProfileStatusHooks from './ProfileStatusHooks';\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile) {\n        return <Loader />\n    }\n    return (\n        <div>\n            {/* <div>\n                <img src=\"https://phuquoclife.ru/wp-content/uploads/2019/11/gde-vstretit-rassvet-na-fukuok-3-870x400.jpg\" alt='no_image' />\n            </div> */}\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.small} />\n                <ProfileStatusHooks\n                    status={props.status}\n                    updateStatus = { props.updateStatus }\n                />\n                <div> Имя: {\" \" + props.profile.fullname}</div>\n                <div> О себе: {\" \" + props.profile.aboutMe}</div>\n                <h3>Мои социальные сети</h3>\n                <div> Facebook {\" \" + props.profile.contacts.facebook}</div>\n                <div> VK {\" \" + props.profile.contacts.vk}</div>\n                <div> Github {\" \" + props.profile.contacts.github}</div>\n                <h3>Раздел любимой работенки</h3>\n                <div> Нужна ли мне работенка: {props.profile.lookingForAJob ? ' Да' : ' Нет'}</div>\n                <div> Описание поиска: {\" \" + props.profile.lookingForAJobDescription}</div>\n\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo ","import React from 'react';\nimport s from './Post.module.css';\n\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src='https://avatarfiles.alphacoders.com/172/thumb-172466.jpg' alt='no_image' />\n            {props.message}\n            <div>\n                <span>likes: {props.countLikes || 0}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import React, { Component } from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { reduxForm, Field } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormControls/FormControls';\n//import { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profileReducer';\n\n\nconst MyPosts = React.memo(props => {\n    // shouldComponentUpdate(nextProps, nextState){\n    //     return false;\n    // }\n    let onAddPost = (value) => {\n        props.addPost(value.message)\n    }\n    // let onPostChange = (event) => {\n    //     props.updateNewPostTextActionCreator(event.target.value)\n    // }\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <ReduxDialogsForm onSubmit={onAddPost} />\n            </div>\n            <div className={s.posts}>\n                {props.posts.map((p) => <Post key={p.id} message={p.message} countLikes={p.countLikes} />)}\n            </div>\n        </div>\n    )\n})\n\n\nconst maxLength10 = maxLengthCreator(10);\n\n\nconst PostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n\n            <Field\n                placeholder=\"Enter your post\"\n                name=\"message\"\n                component={Textarea}\n                validate={[required, maxLength10]}\n            ></Field>\n\n            <div className={s.myPost__button}>\n                <button\n\n                >Add post</button>\n\n            </div>\n        </form>\n    )\n}\n\nconst ReduxDialogsForm = reduxForm({\n    form: 'ProfileAddNewPost'\n})(PostsForm)\n\n\nexport default MyPosts","import React from 'react';\nimport { addPostActionCreator } from '../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n    \n    return {\n        posts: state.profilePage.posts,\n        textArea: state.profilePage.textArea\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    \n    return {\n        addPost: (postMessage) => { dispatch(addPostActionCreator(postMessage)) },\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\n\nexport default MyPostsContainer","import React from 'react';\nimport s from './Profile.module.css';\n//import MyPosts from './MyPosts/MyPosts'\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\n\nconst Profile = (props) => {\n    console.log('RENDER PROFILE')\n    return (\n        <div className={s.content}>\n            <ProfileInfo\n                profile={props.profile}\n                status={props.status}\n                updateStatus = { props.updateStatusThunkCreator}\n            />\n            {/* <MyPostsContainer store={props.store} /> */}\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile","import React from 'react';\nimport Profile from './Profile';\nimport { getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator } from '../../redux/profileReducer';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n    \n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorisedUserId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfileThunkCreator(userId)\n        this.props.getStatusThunkCreator(userId)\n        //this.props.updateStatusThunkCreator('Статус')\n        // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n        //     .then(response => {\n        //         //this.props.setLoading(false)\n        //         this.props.setUserProfile(response.data)\n        //     })\n\n    }\n\n        render() {\n            return (\n                <Profile {...this.props}\n                // profile = { this.props.profile }\n                // status = { this.props.status }\n                // updateStatus = { this.props.updateStatusThunkCreator}\n                />\n            )\n        }\n    }\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorisedUserId: state.auth.id,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator }),\n    withRouter,\n    //withAuthRedirect,\n)(ProfileContainer)\n\n// let AuthRedirectContainer = withAuthRedirect(ProfileContainer)\n\n// let withUrlDataContainerComponent = withRouter(AuthRedirectContainer)\n\n// export default connect(mapStateToProps, {getProfileThunkCreator}) (withUrlDataContainerComponent)"],"sourceRoot":""}