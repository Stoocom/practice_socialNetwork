{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/MyDialogsContainer.jsx","components/hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","name","Message","message","maxLength","maxLengthCreator","ReduxDialogsForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","newMessage__button","Dialogs","dialogs","messages","map","d","key","m","messages_block_c","messagesNew","formData","console","log","addMessage","MyDialogsContainer","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","Component","AuthRedirectComponent","this","isAuth","React","auth"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,6BAA6B,iBAAmB,kCAAkC,mBAAqB,sC,oBCA9TD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,+FCUlDC,EAPI,SAACC,GAChB,IAAMC,EAAO,YAAcD,EAAME,GACjC,OAAQ,yBAAKC,UAAWC,IAAEC,QACtB,kBAAC,IAAD,CAASC,GAAIL,GAAOD,EAAMO,Q,kBCEnBC,EANC,SAACR,GACb,OAAO,yBAAKG,UAAWC,IAAEK,SACpBT,EAAMS,U,iCCuCTC,EAAYC,YAAiB,IAkB7BC,EAAmBC,YAAU,CAC/BC,KAAM,WADeD,EAhBL,SAACb,GACjB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,kBAACC,EAAA,EAAD,CACIC,YAAY,qBACZX,KAAK,UACLY,UAAWC,IACXC,SAAU,CAACC,IAAUZ,KAEzB,yBAAKP,UAAWC,IAAEmB,oBACd,oDAUDC,EAxDC,SAACxB,GAQb,OACI,yBAAKG,UAAWC,IAAEqB,SACd,yBAAKtB,UAAWC,IAAEsB,UAEV1B,EAAMyB,QAAQA,QAAQE,KAAI,SAACC,GACvB,OAAQ,kBAAC,EAAD,CAAYC,IAAKD,EAAE1B,GAAIK,KAAMqB,EAAErB,KAAML,GAAI0B,EAAE1B,SAI/D,yBAAKC,UAAWC,IAAEsB,UAEV1B,EAAMyB,QAAQC,SAASC,KAAI,SAACG,GACxB,OAAQ,kBAAC,EAAD,CAASD,IAAKC,EAAE5B,GAAIO,QAASqB,EAAErB,QAASP,GAAI4B,EAAE5B,SAIlE,yBAAKC,UAAWC,IAAE2B,kBACd,yBAAK5B,UAAWC,IAAE4B,aACd,2CACA,kBAACpB,EAAD,CAAkBG,SAxBd,SAACkB,GACjBC,QAAQC,IAAIF,GACZjC,EAAMoC,WAAWH,EAASxB,gB,uDCK9B4B,EAAqBC,YACrBC,aAbkB,SAACC,GACnB,MAAO,CACHf,QAASe,EAAMC,gBAGE,SAACC,GACtB,MAAO,CACHN,WAAY,SAACH,GAAeS,EAASC,YAAwBV,UCXrC,SAACW,GAE7B,IAGMC,EALqC,uKAOnC,OAA0B,IAAtBC,KAAK9C,MAAM+C,OAAyB,kBAAC,IAAD,CAAUzC,GAAG,WAC9C,kBAACsC,EAAcE,KAAK9C,WARQ,GAKPgD,IAAMJ,WAW1C,OAHqCL,aAXJ,SAACC,GAAD,MAAY,CACzCO,OAAQP,EAAMS,KAAKF,UAUcR,CAAoCM,KDGpDP,CAGvBd,GAMaa","file":"static/js/4.bf6069bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"messagesNew\":\"Dialogs_messagesNew__3hxI7\",\"messages_block_c\":\"Dialogs_messages_block_c__29GLn\",\"newMessage__button\":\"Dialogs_newMessage__button__3yYSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__11r0A\",\"message\":\"Message_message__1MOXo\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n    const path = '/dialogs/' + props.id;\n    return (<div className={s.dialog}>\n        <NavLink to={path}>{props.name}</NavLink>\n    </div>)\n}\n\nexport default DialogItem","import React from 'react';\nimport s from './Message.module.css';\n\nconst Message = (props) => {\n    return <div className={s.message}>\n        {props.message}\n    </div>\n}\n\nexport default Message","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { reduxForm, Field } from 'redux-form';\nimport { Textarea } from '../common/FormControls/FormControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\n//import { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\n\nconst Dialogs = (props) => {\n\n\n    const onSubmitted = (formData) => {\n        console.log(formData)\n        props.addMessage(formData.message)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.messages}>\n                {\n                    props.dialogs.dialogs.map((d) => {\n                        return (<DialogItem key={d.id} name={d.name} id={d.id} />)\n                    })\n                }\n            </div>\n            <div className={s.messages}>\n                {\n                    props.dialogs.messages.map((m) => {\n                        return (<Message key={m.id} message={m.message} id={m.id} />)\n                    })\n                }\n            </div>\n            <div className={s.messages_block_c}>\n                <div className={s.messagesNew}>\n                    <h3>New message</h3>\n                    <ReduxDialogsForm onSubmit={onSubmitted} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst maxLength = maxLengthCreator(20);\n\nconst DialogsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field \n                placeholder=\"Enter your message\" \n                name=\"message\" \n                component={Textarea}\n                validate={[required, maxLength]}\n            ></Field>\n            <div className={s.newMessage__button}>\n                <button >Add message</button>\n            </div>\n        </form>\n    )\n}\n\nconst ReduxDialogsForm = reduxForm({\n    form: 'message'\n})(DialogsForm)\n\nexport default Dialogs","import React from 'react';\nimport { addMessageActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (formData) => { dispatch(addMessageActionCreator(formData)) },\n        \n    }\n}\n\nlet MyDialogsContainer = compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Dialogs) \n\n// let AuthRedirectContainer = withAuthRedirect(Dialogs)\n\n// const MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer)\n\nexport default MyDialogsContainer","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nexport const withAuthRedirect = (Component) => {\n    \n    let mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n    class AuthRedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth === false) return <Redirect to='/login'/>\n            return <Component {...this.props} />\n        }\n    }\n\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\n\n\n    return ConnectedAuthRedirectComponent\n}"],"sourceRoot":""}