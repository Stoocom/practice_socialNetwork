{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/UsersCopy.jsx\";\nimport React from 'react';\nimport s from './Users.module.css';\nimport * as axios from 'axios';\nimport userPhoto from '../../assets/images/default_icon.jpg';\n\nclass UsersAPIContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.unfollow = id => {\n      this.props.unfollow(id);\n    };\n\n    this.setNewUsers = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalCount(response.data.totalCount / 100);\n    });\n  }\n\n  render() {\n    let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\n    let pages = [];\n\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, pages.map(i => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.setNewUsers(i),\n        key: i,\n        className: this.props.currentPage === i ? s.selectedPage : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 36\n        }\n      }, i);\n    })), this.props.users.map(user => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: s.user,\n        key: user.id + user.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: s.avatar,\n        src: user.photos.small != null ? user.photos.small : userPhoto,\n        alt: \"avatar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      })), user.followed ? /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.follow(user.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 39\n        }\n      }, \"\\u0414\\u0440\\u0443\\u0433\") : /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.unfollow(user.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 39\n        }\n      }, \"\\u041D\\u0435 \\u0432 \\u0434\\u0440\\u0443\\u0437\\u044C\\u044F\\u0445\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, user.name), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, user.status), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, \"user.location.country\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, \"user.location.city\")));\n    }));\n  }\n\n}\n\nexport default UsersAPIContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/UsersCopy.jsx"],"names":["React","s","axios","userPhoto","UsersAPIContainer","Component","unfollow","id","props","setNewUsers","pageNumber","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalCount","totalCount","render","pagesCount","Math","ceil","pages","i","push","map","selectedPage","users","user","name","avatar","photos","small","followed","follow","status"],"mappings":"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","sourcesContent":["import React from 'react'\nimport s from './Users.module.css'\nimport * as axios from 'axios'\nimport userPhoto from '../../assets/images/default_icon.jpg'\n\nclass UsersAPIContainer extends React.Component {\n    // constructor(props) {\n    //     super(props)\n    // }\n\n    unfollow = (id) => {\n        this.props.unfollow(id)\n    }\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items)\n                this.props.setTotalCount(response.data.totalCount / 100)\n            })\n    }\n\n    setNewUsers = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items)\n            })\n    }\n\n    render() {\n\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize)\n        let pages = []\n        for (let i = 1; i <= pagesCount; i++) {\n            pages.push(i)\n        }\n\n        return (\n            <div>\n                <div>\n                    {\n                        pages.map(i => {\n                            return <span onClick={() => this.setNewUsers(i)} key={i} className={(this.props.currentPage === i) ? s.selectedPage : ''}>{i}</span>\n                        })\n                    }\n                </div>\n\n                {this.props.users.map((user) => {\n                    return (\n                        <div className={s.user} key={user.id + user.name}>\n\n                            <div>\n                                <div>\n                                    <img className={s.avatar} src={user.photos.small != null ? user.photos.small : userPhoto} alt='avatar' />\n                                </div>\n                                {user.followed\n                                    ? <button onClick={() => this.props.follow(user.id)}>Друг</button>\n                                    : <button onClick={() => this.unfollow(user.id)}>Не в друзьях</button>\n                                }\n                            </div>\n                            <div>\n                                <div>{user.name}</div>\n                                <div>{user.status}</div>\n                                <div>{\"user.location.country\"}</div>\n                                <div>{\"user.location.city\"}</div>\n                            </div>\n                        </div>\n                    )\n                })\n                }\n            </div>\n        )\n    }\n}\n\nexport default UsersAPIContainer"]},"metadata":{},"sourceType":"module"}