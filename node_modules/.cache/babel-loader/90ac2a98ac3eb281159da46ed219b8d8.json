{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/UsersContainer.jsx\";\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalCount, setLoading } from '../../redux/usersReducer';\nimport Users from './Users.jsx';\nimport axios from 'axios';\nimport React from 'react';\nimport Loader from '../common/Preloader/Loader';\nimport { getUsers } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.unFollow = id => {\n      this.props.unfollow(id);\n    };\n\n    this.onPageChanged = pageNumber => {\n      this.props.setLoading(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setLoading(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setLoading(true);\n    getUsers();\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setLoading(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalCount(response.data.totalCount / 300);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Users, {\n      totalCount: this.props.totalCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unFollow: this.unFollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalCount: state.usersPage.totalCount,\n    currentPage: state.usersPage.currentPage,\n    isLoading: state.usersPage.isLoading\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (id) => { dispatch(followAC(id)) },\n//         unfollow: (id) => { dispatch(unfollowAC(id)) },\n//         setUsers: (users) => { dispatch(setUsersAC(users)) },\n//         setCurrentPage: (pageNumber) => { dispatch(setCurrentPageAC(pageNumber)) },\n//         setTotalCount: (totalCount) => { dispatch(setTotalCountAC(totalCount)) },\n//         setLoading: (isLoading) => { dispatch(setLoadingAC(isLoading)) },\n//     }\n// }\n// const UsersMainContainer = connect(mapStateToProps, {\n//     follow: followAC,\n//     unfollow: unfollowAC,\n//     setUsers: setUsers,\n//     setCurrentPage: setCurrentPage,\n//     setTotalCount: setTotalCount,\n//     setLoading: setLoading,\n// })(UsersContainer)\n\n\nconst UsersMainContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalCount,\n  setLoading\n})(UsersContainer);\nexport default UsersMainContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/UsersContainer.jsx"],"names":["connect","follow","unfollow","setUsers","setCurrentPage","setTotalCount","setLoading","Users","axios","React","Loader","getUsers","UsersContainer","Component","unFollow","id","props","onPageChanged","pageNumber","get","pageSize","then","response","data","items","componentDidMount","currentPage","totalCount","render","isLoading","users","mapStateToProps","state","usersPage","UsersMainContainer"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,cAArC,EAAqDC,aAArD,EAAoEC,UAApE,QAAsF,0BAAtF;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAGA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SACzCC,QADyC,GAC7BC,EAAD,IAAQ;AACf,WAAKC,KAAL,CAAWd,QAAX,CAAoBa,EAApB;AACH,KAHwC;;AAAA,SAiBzCE,aAjByC,GAiBxBC,UAAD,IAAgB;AAC5B,WAAKF,KAAL,CAAWV,UAAX,CAAsB,IAAtB;AACA,WAAKU,KAAL,CAAWZ,cAAX,CAA0Bc,UAA1B;AACAV,MAAAA,KAAK,CAACW,GAAN,CAAW,2DAA0DD,UAAW,UAAS,KAAKF,KAAL,CAAWI,QAAS,EAA7G,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAKN,KAAL,CAAWV,UAAX,CAAsB,KAAtB;AACA,aAAKU,KAAL,CAAWb,QAAX,CAAoBmB,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACH,OAJL;AAKH,KAzBwC;AAAA;;AAIzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,KAAL,CAAWV,UAAX,CAAsB,IAAtB;AAEAK,IAAAA,QAAQ;AAERH,IAAAA,KAAK,CAACW,GAAN,CAAW,2DAA0D,KAAKH,KAAL,CAAWU,WAAY,UAAS,KAAKV,KAAL,CAAWI,QAAS,EAAzH,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKN,KAAL,CAAWV,UAAX,CAAsB,KAAtB;AACA,WAAKU,KAAL,CAAWb,QAAX,CAAoBmB,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACA,WAAKR,KAAL,CAAWX,aAAX,CAAyBiB,QAAQ,CAACC,IAAT,CAAcI,UAAd,GAA2B,GAApD;AACH,KALL;AAMH;;AAYDC,EAAAA,MAAM,GAAG;AAEL,wBACI,0CACK,KAAKZ,KAAL,CAAWa,SAAX,gBAAuB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,gBACD,oBAAC,KAAD;AACI,MAAA,UAAU,EAAE,KAAKb,KAAL,CAAWW,UAD3B;AAEI,MAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWI,QAFzB;AAGI,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWU,WAH5B;AAII,MAAA,aAAa,EAAE,KAAKT,aAJxB;AAKI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWc,KALtB;AAMI,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWf,MANvB;AAOI,MAAA,QAAQ,EAAE,KAAKa,QAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAeH;;AA5CwC;;AA+C7C,IAAIiB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHV,IAAAA,QAAQ,EAAEY,KAAK,CAACC,SAAN,CAAgBb,QAFvB;AAGHO,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN,UAHzB;AAIHD,IAAAA,WAAW,EAAEM,KAAK,CAACC,SAAN,CAAgBP,WAJ1B;AAKHG,IAAAA,SAAS,EAAEG,KAAK,CAACC,SAAN,CAAgBJ;AALxB,GAAP;AAOH,CARD,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMK,kBAAkB,GAAGlC,OAAO,CAAC+B,eAAD,EAAkB;AAChD9B,EAAAA,MADgD;AACxCC,EAAAA,QADwC;AAC9BC,EAAAA,QAD8B;AACrBC,EAAAA,cADqB;AACLC,EAAAA,aADK;AACSC,EAAAA;AADT,CAAlB,CAAP,CAExBM,cAFwB,CAA3B;AAIA,eAAesB,kBAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalCount, setLoading } from '../../redux/usersReducer';\nimport Users from './Users.jsx'\nimport axios from 'axios'\nimport React from 'react'\nimport Loader from '../common/Preloader/Loader';\nimport { getUsers } from '../../api/api';\n\n\nclass UsersContainer extends React.Component {\n    unFollow = (id) => {\n        this.props.unfollow(id)\n    }\n    componentDidMount() {\n        this.props.setLoading(true)\n\n        getUsers();\n        \n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setLoading(false)\n                this.props.setUsers(response.data.items)\n                this.props.setTotalCount(response.data.totalCount / 300)\n            })\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setLoading(true)\n        this.props.setCurrentPage(pageNumber)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setLoading(false)\n                this.props.setUsers(response.data.items)\n            })\n    }\n    \n    render() {\n\n        return (\n            <>\n                {this.props.isLoading ? <Loader/> :\n                <Users\n                    totalCount={this.props.totalCount}\n                    pageSize={this.props.pageSize}\n                    currentPage={this.props.currentPage}\n                    onPageChanged={this.onPageChanged}\n                    users={this.props.users}\n                    follow={this.props.follow}\n                    unFollow={this.unFollow}\n                />\n        }\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalCount: state.usersPage.totalCount,\n        currentPage: state.usersPage.currentPage,\n        isLoading: state.usersPage.isLoading,\n    }\n}\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (id) => { dispatch(followAC(id)) },\n//         unfollow: (id) => { dispatch(unfollowAC(id)) },\n//         setUsers: (users) => { dispatch(setUsersAC(users)) },\n//         setCurrentPage: (pageNumber) => { dispatch(setCurrentPageAC(pageNumber)) },\n//         setTotalCount: (totalCount) => { dispatch(setTotalCountAC(totalCount)) },\n//         setLoading: (isLoading) => { dispatch(setLoadingAC(isLoading)) },\n//     }\n// }\n\n// const UsersMainContainer = connect(mapStateToProps, {\n//     follow: followAC,\n//     unfollow: unfollowAC,\n//     setUsers: setUsers,\n//     setCurrentPage: setCurrentPage,\n//     setTotalCount: setTotalCount,\n//     setLoading: setLoading,\n// })(UsersContainer)\n\nconst UsersMainContainer = connect(mapStateToProps, {\n    follow, unfollow, setUsers,setCurrentPage, setTotalCount,setLoading,\n})(UsersContainer)\n\nexport default UsersMainContainer"]},"metadata":{},"sourceType":"module"}