{"ast":null,"code":"import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\n\nlet mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: () => {\n      dispatch(addMessageActionCreator());\n    },\n    updateNewMessageText: body => {\n      dispatch(updateNewMessageTextActionCreator(body));\n    }\n  };\n};\n\nlet MyDialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs); // let AuthRedirectContainer = withAuthRedirect(Dialogs)\n// const MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer)\n\nexport default MyDialogsContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Dialogs/MyDialogsContainer.jsx"],"names":["React","addMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","connect","withAuthRedirect","mapStateToProps","state","dialogs","dialogsPage","mapDispatchToProps","dispatch","addMessage","updateNewMessageText","body","MyDialogsContainer","compose"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,EAAkCC,iCAAlC,QAA2E,4BAA3E;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE;AADZ,GAAP;AAGH,CAJD;;AAKA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,UAAU,EAAE,MAAM;AAAED,MAAAA,QAAQ,CAACV,uBAAuB,EAAxB,CAAR;AAAqC,KADtD;AAEHY,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAAEH,MAAAA,QAAQ,CAACT,iCAAiC,CAACY,IAAD,CAAlC,CAAR;AAAmD;AAFlF,GAAP;AAIH,CALD;;AAOA,IAAIC,kBAAkB,GAAGC,OAAO,CAC5BZ,OAAO,CAACE,eAAD,EAAkBI,kBAAlB,CADqB,EAE5BL,gBAF4B,CAAP,CAGvBF,OAHuB,CAAzB,C,CAKA;AAEA;;AAEA,eAAeY,kBAAf","sourcesContent":["import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: () => { dispatch(addMessageActionCreator()) },\n        updateNewMessageText: (body) => { dispatch(updateNewMessageTextActionCreator(body)) }\n    }\n}\n\nlet MyDialogsContainer = compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Dialogs) \n\n// let AuthRedirectContainer = withAuthRedirect(Dialogs)\n\n// const MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer)\n\nexport default MyDialogsContainer"]},"metadata":{},"sourceType":"module"}