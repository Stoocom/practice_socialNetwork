{"ast":null,"code":"import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: formData => {\n      dispatch(addMessageActionCreator(formData));\n    } //updateNewMessageText: (body) => { dispatch(updateNewMessageTextActionCreator(body)) }\n\n  };\n};\n\nlet MyDialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs); // let AuthRedirectContainer = withAuthRedirect(Dialogs)\n// const MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer)\n\nexport default MyDialogsContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Dialogs/MyDialogsContainer.jsx"],"names":["React","addMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","connect","withAuthRedirect","compose","mapStateToProps","state","dialogs","dialogsPage","mapDispatchToProps","dispatch","addMessage","formData","MyDialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,EAAkCC,iCAAlC,QAA2E,4BAA3E;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE;AADZ,GAAP;AAGH,CAJD;;AAKA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,UAAU,EAAGC,QAAD,IAAc;AAAEF,MAAAA,QAAQ,CAACX,uBAAuB,CAACa,QAAD,CAAxB,CAAR;AAA6C,KADtE,CAEH;;AAFG,GAAP;AAIH,CALD;;AAOA,IAAIC,kBAAkB,GAAGT,OAAO,CAC5BF,OAAO,CAACG,eAAD,EAAkBI,kBAAlB,CADqB,EAE5BN,gBAF4B,CAAP,CAGvBF,OAHuB,CAAzB,C,CAKA;AAEA;;AAEA,eAAeY,kBAAf","sourcesContent":["import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (formData) => { dispatch(addMessageActionCreator(formData)) },\n        //updateNewMessageText: (body) => { dispatch(updateNewMessageTextActionCreator(body)) }\n    }\n}\n\nlet MyDialogsContainer = compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Dialogs) \n\n// let AuthRedirectContainer = withAuthRedirect(Dialogs)\n\n// const MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer)\n\nexport default MyDialogsContainer"]},"metadata":{},"sourceType":"module"}