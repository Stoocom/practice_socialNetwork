{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nlet initialState = {\n  users: [{\n    id: 1,\n    followed: false,\n    fullName: 'Alex',\n    status: 'I am boss',\n    location: {\n      city: 'Moscow',\n      country: 'Russia'\n    }\n  }, {\n    id: 2,\n    followed: true,\n    fullName: 'Natasha',\n    status: 'I am boss',\n    location: {\n      city: 'Moscow',\n      country: 'Russia'\n    }\n  }, {\n    id: 3,\n    followed: false,\n    fullName: 'Pavel',\n    status: 'I am boss',\n    location: {\n      city: 'Moscow',\n      country: 'Russia'\n    }\n  }, {\n    id: 4,\n    followed: false,\n    fullName: 'Yuriy',\n    status: 'I am boss',\n    location: {\n      city: 'Moscow',\n      country: 'Russia'\n    }\n  }]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        // users: [...state.users],\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => {\n  {\n    type: FOLLOW, userId;\n  }\n};\nexport const unfollowAC = userId => {\n  {\n    type: UNFOLLOW, userId;\n  }\n};\nexport const setUsers = users => {\n  {\n    type: SET_USERS, users;\n  }\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","initialState","users","id","followed","fullName","status","location","city","country","usersReducer","state","action","type","map","u","userId","SET_USERS","followAC","unfollowAC","setUsers"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\n\nlet initialState = {\n    users: [\n        { id: 1, followed: false, fullName: 'Alex', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n        { id: 2, followed: true, fullName: 'Natasha', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n        { id: 3, followed: false, fullName: 'Pavel', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n        { id: 4, followed: false, fullName: 'Yuriy', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n    ]\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                // users: [...state.users],\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return { \n                            ...u, \n                            followed: true \n                        }\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return { \n                            ...u, \n                            followed: false \n                        }\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return { \n                            ...u, \n                            followed: false \n                        }\n                    }\n                    return u\n                })\n            }\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userId) => {{ type: FOLLOW, userId }}\nexport const unfollowAC = (userId) => {{ type: UNFOLLOW, userId }}\nexport const setUsers = (users) => {{ type: SET_USERS, users }}\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}