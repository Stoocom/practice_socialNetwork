{"ast":null,"code":"import _slicedToArray from\"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import s from'../../Users/Users.module.css';var Paginator=function Paginator(_ref){var _ref$portionSize=_ref.portionSize,portionSize=_ref$portionSize===void 0?10:_ref$portionSize,props=_objectWithoutProperties(_ref,[\"portionSize\"]);console.log(props);var pagesCount=Math.ceil(props.totalCount/props.pageSize);var pages=[];for(var i=1;i<=pagesCount;i++){pages.push(i);}var portionCount=Math.ceil(pagesCount/portionSize);var _useState=useState(2),_useState2=_slicedToArray(_useState,2),portionNumber=_useState2[0],setPortionNumber=_useState2[1];var leftPortionPageNumber=(portionNumber-1)*portionSize+1;var rightPortionPageNumber=portionNumber*portionSize;return/*#__PURE__*/React.createElement(\"div\",null,portionNumber>1&&/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setPortionNumber(portionNumber-1);}},\" PREV \"),pages.filter(function(numberPage){return numberPage>=leftPortionPageNumber&&numberPage<=rightPortionPageNumber;}).map(function(i){return/*#__PURE__*/React.createElement(\"span\",{onClick:function onClick(){return props.onPageChanged(i);},key:i,className:props.currentPage===i?s.selectedPage:''},i);}),portionCount>portionNumber&&/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setPortionNumber(portionNumber+1);}},\" NEXT \"));};export default Paginator;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","s","Paginator","portionSize","props","console","log","pagesCount","Math","ceil","totalCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","numberPage","map","onPageChanged","currentPage","selectedPage"],"mappings":"sYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,CAAP,KAAc,8BAAd,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAoC,2BAAjCC,WAAiC,CAAjCA,WAAiC,2BAAnB,EAAmB,kBAAXC,KAAW,gDAChDC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,GAAIG,CAAAA,UAAU,CAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACM,UAAN,CAAmBN,KAAK,CAACO,QAAnC,CAAjB,CACA,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIN,UAArB,CAAiCM,CAAC,EAAlC,CAAsC,CAClCD,KAAK,CAACE,IAAN,CAAWD,CAAX,EACH,CAED,GAAIE,CAAAA,YAAY,CAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,CAAGJ,WAAvB,CAAnB,CARgD,cASRH,QAAQ,CAAC,CAAD,CATA,wCAS3CgB,aAT2C,eAS5BC,gBAT4B,eAUhD,GAAIC,CAAAA,qBAAqB,CAAG,CAACF,aAAa,CAAG,CAAjB,EAAsBb,WAAtB,CAAoC,CAAhE,CACA,GAAIgB,CAAAA,sBAAsB,CAAGH,aAAa,CAAGb,WAA7C,CAEA,mBAAO,+BAEKa,aAAa,CAAG,CAAhB,eACA,8BAAQ,OAAO,CAAE,yBAAMC,CAAAA,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAtB,EAAjB,WAHL,CAMKJ,KAAK,CACAQ,MADL,CACY,SAACC,UAAD,QAAgBA,CAAAA,UAAU,EAAIH,qBAAd,EAAuCG,UAAU,EAAIF,sBAArE,EADZ,EAEKG,GAFL,CAES,SAAAT,CAAC,CAAI,CACV,mBAAO,4BAAM,OAAO,CAAE,yBAAMT,CAAAA,KAAK,CAACmB,aAAN,CAAoBV,CAApB,CAAN,EAAf,CAA6C,GAAG,CAAEA,CAAlD,CAAqD,SAAS,CAAGT,KAAK,CAACoB,WAAN,GAAsBX,CAAvB,CAA4BZ,CAAC,CAACwB,YAA9B,CAA6C,EAA7G,EAAkHZ,CAAlH,CAAP,CACH,CAJD,CANL,CAaKE,YAAY,CAAGC,aAAf,eACA,8BAAQ,OAAO,CAAE,yBAAMC,CAAAA,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAtB,EAAjB,WAdL,CAAP,CAiBH,CA9BD,CAgCA,cAAed,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport s from '../../Users/Users.module.css'\n\nlet Paginator = ({ portionSize = 10 , ...props}) => {\n    console.log(props)\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize )\n    let [portionNumber, setPortionNumber] = useState(2)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return <div>\n            { \n                portionNumber > 1 && \n                <button onClick={() => setPortionNumber(portionNumber - 1)}> PREV </button>\n            }\n            {\n                pages\n                    .filter((numberPage) => numberPage >= leftPortionPageNumber && numberPage <= rightPortionPageNumber)\n                    .map(i => {\n                    return <span onClick={() => props.onPageChanged(i)} key={i} className={(props.currentPage === i) ? s.selectedPage : ''}>{i}</span>\n                })\n            }\n            { \n                portionCount > portionNumber && \n                <button onClick={() => setPortionNumber(portionNumber + 1)}> NEXT </button>\n            }\n        </div>\n}\n\nexport default Paginator"]},"metadata":{},"sourceType":"module"}