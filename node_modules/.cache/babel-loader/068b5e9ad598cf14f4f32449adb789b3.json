{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/common/FormControls/FormControls.js\";\nimport React from 'react';\nimport s from './FormControls.module.css';\nexport const Textarea = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.error && meta.touched;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.form_control + \" \" + (hasError && s.error),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", Object.assign({}, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }))), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }\n  }, \"s\", meta.error));\n};\nexport const Input = ({\n  input,\n  meta,\n  ...props\n}) => {\n  const hasError = meta.error && meta.touched;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.form_control + \" \" + (hasError && s.error),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }))), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 27\n    }\n  }, \"s\", meta.error));\n};","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/common/FormControls/FormControls.js"],"names":["React","s","Textarea","input","meta","props","hasError","error","touched","form_control","Input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,2BAAd;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAe,KAAGC;AAAlB,CAAD,KAA+B;AACnD,QAAMC,QAAQ,GAAGF,IAAI,CAACG,KAAL,IAAcH,IAAI,CAACI,OAApC;AACA,sBACY;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACQ,YAAF,GAAiB,GAAjB,IAAwBH,QAAQ,IAAIL,CAAC,CAACM,KAAtC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,kDAAcJ,KAAd,EAAyBE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADI,EAIFC,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQF,IAAI,CAACG,KAAb,CAJV,CADZ;AAQH,CAVM;AAWP,OAAO,MAAMG,KAAK,GAAG,CAAC;AAAEP,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAe,KAAGC;AAAlB,CAAD,KAA+B;AAChD,QAAMC,QAAQ,GAAGF,IAAI,CAACG,KAAL,IAAcH,IAAI,CAACI,OAApC;AACA,sBACY;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACQ,YAAF,GAAiB,GAAjB,IAAwBH,QAAQ,IAAIL,CAAC,CAACM,KAAtC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,+CAAWJ,KAAX,EAAsBE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADI,EAIFC,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQF,IAAI,CAACG,KAAb,CAJV,CADZ;AAQH,CAVM","sourcesContent":["import React from 'react'\nimport s from './FormControls.module.css'\n\nexport const Textarea = ({ input, meta, ...props }) => {\n    const hasError = meta.error && meta.touched\n    return (\n                <div className={s.form_control + \" \" + (hasError && s.error)}>\n            <div>\n                <textarea {...input} {...props} />\n            </div>\n            { hasError && <span>s{meta.error}</span> }\n        </div>\n    )\n}\nexport const Input = ({ input, meta, ...props }) => {\n    const hasError = meta.error && meta.touched\n    return (\n                <div className={s.form_control + \" \" + (hasError && s.error)}>\n            <div>\n                <input {...input} {...props} />\n            </div>\n            { hasError && <span>s{meta.error}</span> }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}