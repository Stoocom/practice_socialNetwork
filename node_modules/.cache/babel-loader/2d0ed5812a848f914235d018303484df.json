{"ast":null,"code":"import { authAPI } from \"../api/authApi\"; //import { stopSubmit } from \"redux-form\"\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => {\n  return {\n    type: SET_INITIALIZED_SUCCESS\n  };\n};\nexport const initializeApp = () => dispatch => {\n  authAPI.getLogin().then(response => {\n    if (response.data.resultCode === 0) {\n      let {\n        id,\n        login,\n        email\n      } = response.data.data;\n      dispatch(setAuthUserData(id, login, email, true));\n    }\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/appReducer.js"],"names":["authAPI","SET_INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","getLogin","then","response","data","resultCode","id","login","email","setAuthUserData"],"mappings":"AAAA,SAASA,OAAT,QAAwB,gBAAxB,C,CACA;;AAEA,MAAMC,uBAAuB,GAAG,yBAAhC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,uBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACpC,SAAO;AAAED,IAAAA,IAAI,EAAEN;AAAR,GAAP;AACH,CAFM;AAIP,OAAO,MAAMQ,aAAa,GAAG,MAAMC,QAAQ,IAAI;AACvCV,EAAAA,OAAO,CAACW,QAAR,GACKC,IADL,CACUC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChC,UAAI;AAACC,QAAAA,EAAD;AAAKC,QAAAA,KAAL;AAAYC,QAAAA;AAAZ,UAAsBL,QAAQ,CAACC,IAAT,CAAcA,IAAxC;AACAJ,MAAAA,QAAQ,CAACS,eAAe,CAACH,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;AACH;AACJ,GANL;AAOH,CARE;AAaP,eAAed,UAAf","sourcesContent":["import { authAPI } from \"../api/authApi\"\n//import { stopSubmit } from \"redux-form\"\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS'\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            }\n        default:\n            return state\n    }\n}\n\nexport const initializedSuccess = () => {\n    return { type: SET_INITIALIZED_SUCCESS }\n}\n\nexport const initializeApp = () => dispatch => {\n        authAPI.getLogin()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let {id, login, email } = response.data.data\n                    dispatch(setAuthUserData(id, login, email, true))\n                }\n            })\n    }\n\n\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}