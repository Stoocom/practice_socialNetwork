{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from './Profile';\nimport { getProfileThunkCreator } from '../../redux/profileReducer';\nimport { connect } from 'react-redux';\nimport * as axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    //console.log(this.props)\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.getProfileThunkCreator(userId); // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n    //     .then(response => {\n    //         //this.props.setLoading(false)\n    //         this.props.setUserProfile(response.data)\n    //     })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet AuthRedirectContainer = withAuthRedirect(ProfileContainer);\nlet withUrlDataContainerComponent = withRouter(AuthRedirectContainer);\nexport default connect(mapStateToProps, {\n  getProfileThunkCreator\n})(withUrlDataContainerComponent);","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","getProfileThunkCreator","connect","axios","withRouter","withAuthRedirect","ProfileContainer","Component","componentDidMount","userId","props","match","params","render","profile","mapStateToProps","state","profilePage","isAuth","auth","AuthRedirectContainer","withUrlDataContainerComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,sBAAT,QAAuC,4BAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;AAEA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,CAAT;AACH;;AACD,SAAKC,KAAL,CAAWT,sBAAX,CAAkCQ,MAAlC,EANgB,CAOhB;AACA;AACA;AACA;AACA;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,OAAD,oBAAa,KAAKH,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWI,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AApB0C;;AAuB/C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADxB;AAEHI,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAIH,CALD;;AAMA,IAAIE,qBAAqB,GAAGf,gBAAgB,CAACC,gBAAD,CAA5C;AAEA,IAAIe,6BAA6B,GAAGjB,UAAU,CAACgB,qBAAD,CAA9C;AAEA,eAAelB,OAAO,CAACa,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAAoDoB,6BAApD,CAAf","sourcesContent":["import React from 'react';\nimport Profile from './Profile';\nimport { getProfileThunkCreator } from '../../redux/profileReducer';\nimport { connect } from 'react-redux';\nimport * as axios from 'axios'\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        //console.log(this.props)\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = 2\n        }\n        this.props.getProfileThunkCreator(userId)\n        // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n        //     .then(response => {\n        //         //this.props.setLoading(false)\n        //         this.props.setUserProfile(response.data)\n        //     })\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        isAuth: state.auth.isAuth,\n    }\n}\nlet AuthRedirectContainer = withAuthRedirect(ProfileContainer)\n\nlet withUrlDataContainerComponent = withRouter(AuthRedirectContainer)\n\nexport default connect(mapStateToProps, {getProfileThunkCreator}) (withUrlDataContainerComponent)"]},"metadata":{},"sourceType":"module"}