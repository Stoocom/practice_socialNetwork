{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nlet initialState = {\n  users: [// { id: 1, followed: false, fullName: 'Alex', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n    // { id: 2, followed: true, fullName: 'Natasha', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n    // { id: 3, followed: false, fullName: 'Pavel', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n    // { id: 4, followed: false, fullName: 'Yuriy', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n  ]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        // users: [...state.users],\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => {\n  {\n    type: FOLLOW, userId;\n  }\n};\nexport const unfollowAC = userId => {\n  {\n    type: UNFOLLOW, userId;\n  }\n};\nexport const setUsersAC = users => {\n  {\n    type: SET_USERS, users;\n  }\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","initialState","users","usersReducer","state","action","type","map","u","id","userId","followed","SET_USERS","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AACA;AACA;AACA;AAJG;AADQ,CAAnB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,MAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEH;AACAF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAiBC,CAAD,IAAO;AAC1B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EACH,GAAGF,CADA;AAEHG,cAAAA,QAAQ,EAAE;AAFP,aAAP;AAIH;;AACD,iBAAOH,CAAP;AACH,SARM;AAHJ,OAAP;;AAaJ,SAAKR,QAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAiBC,CAAD,IAAO;AAC1B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EACH,GAAGF,CADA;AAEHG,cAAAA,QAAQ,EAAE;AAFP,aAAP;AAIH;;AACD,iBAAOH,CAAP;AACH,SARM;AAFJ,OAAP;;AAYJ,SAAKI,SAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiB,GAAGG,MAAM,CAACH,KAA3B;AAFJ,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAlCR;AAoCH,CArCD;;AAuCA,OAAO,MAAMS,QAAQ,GAAIH,MAAD,IAAY;AAAC;AAAEJ,IAAAA,IAAI,EAAEP,MAAM,EAAEW,MAAR;AAAgB;AAAC,CAAvD;AACP,OAAO,MAAMI,UAAU,GAAIJ,MAAD,IAAY;AAAC;AAAEJ,IAAAA,IAAI,EAAEN,QAAQ,EAAEU,MAAV;AAAkB;AAAC,CAA3D;AACP,OAAO,MAAMK,UAAU,GAAIb,KAAD,IAAW;AAAC;AAAEI,IAAAA,IAAI,EAAEM,SAAS,EAAEV,KAAX;AAAkB;AAAC,CAA1D;AAEP,eAAeC,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\n\nlet initialState = {\n    users: [\n        // { id: 1, followed: false, fullName: 'Alex', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n        // { id: 2, followed: true, fullName: 'Natasha', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n        // { id: 3, followed: false, fullName: 'Pavel', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n        // { id: 4, followed: false, fullName: 'Yuriy', status: 'I am boss', location: { city: 'Moscow', country: 'Russia' } },\n    ]\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                // users: [...state.users],\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return { \n                            ...u, \n                            followed: true \n                        }\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return { \n                            ...u, \n                            followed: false \n                        }\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...state.users, ...action.users]\n            }\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userId) => {{ type: FOLLOW, userId }}\nexport const unfollowAC = (userId) => {{ type: UNFOLLOW, userId }}\nexport const setUsersAC = (users) => {{ type: SET_USERS, users }}\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}