{"ast":null,"code":"import React from'react';import{reduxForm,Field}from'redux-form';import{Input,createField}from'../common/FormControls/FormControls';import{required}from'../../utils/validators/validators';import{loginThunkCreator}from'../../redux/authReducer';import{connect}from'react-redux';import{Redirect}from'react-router-dom';import style from'../../components/common/FormControls/FormControls.module.css';//import s from './Header.module.css';\n//import { NavLink } from 'react-router-dom';\n//const maxLength = maxLengthCreator(3);\nvar LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error;return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},createField(\"Email\",\"email\",[required],Input),createField(\"Password\",\"password\",[required],Input,{type:\"password\"}),createField(null,\"rememberMe\",[],Input,{type:\"checkbox\"},\"remember me\"),error&&/*#__PURE__*/React.createElement(\"div\",{className:style.formCommonError},error),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",null,\"Login\")));};var ReduxLoginForm=reduxForm({form:'login'})(LoginForm);var LoginPage=function LoginPage(props){var onSubmitted=function onSubmitted(formData){console.log(formData);props.loginThunkCreator(formData.email,formData.password,formData.rememberMe);};if(props.isAuth){return/*#__PURE__*/React.createElement(Redirect,{to:'/profile'});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Login\"),/*#__PURE__*/React.createElement(ReduxLoginForm,{onSubmit:onSubmitted}));};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{loginThunkCreator:loginThunkCreator})(LoginPage);","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Login/index.jsx"],"names":["React","reduxForm","Field","Input","createField","required","loginThunkCreator","connect","Redirect","style","LoginForm","handleSubmit","error","type","formCommonError","ReduxLoginForm","form","LoginPage","props","onSubmitted","formData","console","log","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,YAAjC,CACA,OAASC,KAAT,CAAgBC,WAAhB,KAAmC,qCAAnC,CACA,OAASC,QAAT,KAAyB,mCAAzB,CACA,OAASC,iBAAT,KAAkC,yBAAlC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,8DAAlB,CACA;AACA;AAGA;AAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA6B,IAA1BC,CAAAA,YAA0B,MAA1BA,YAA0B,CAAZC,KAAY,MAAZA,KAAY,CAC3C,mBACI,4BAAM,QAAQ,CAAED,YAAhB,EAESP,WAAW,CAAC,OAAD,CAAU,OAAV,CAAmB,CAACC,QAAD,CAAnB,CAA+BF,KAA/B,CAFpB,CAGSC,WAAW,CAAC,UAAD,CAAa,UAAb,CAAyB,CAACC,QAAD,CAAzB,CAAqCF,KAArC,CAA4C,CAACU,IAAI,CAAE,UAAP,CAA5C,CAHpB,CAIST,WAAW,CAAC,IAAD,CAAO,YAAP,CAAqB,EAArB,CAAyBD,KAAzB,CAAgC,CAACU,IAAI,CAAE,UAAP,CAAhC,CAAoD,aAApD,CAJpB,CAMKD,KAAK,eACF,2BAAK,SAAS,CAAEH,KAAK,CAACK,eAAtB,EACKF,KADL,CAPR,cAUI,4CACI,0CADJ,CAVJ,CADJ,CAgBH,CAjBD,CAmBA,GAAMG,CAAAA,cAAc,CAAGd,SAAS,CAAC,CAC7Be,IAAI,CAAE,OADuB,CAAD,CAAT,CAEpBN,SAFoB,CAAvB,CAIA,GAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAEzB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAc,CAC9BC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAF,KAAK,CAACZ,iBAAN,CAAwBc,QAAQ,CAACG,KAAjC,CAAwCH,QAAQ,CAACI,QAAjD,CAA2DJ,QAAQ,CAACK,UAApE,EACH,CAHD,CAKA,GAAIP,KAAK,CAACQ,MAAV,CAAkB,CACd,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CAED,mBACI,4CACI,sCADJ,cAEI,oBAAC,cAAD,EAAgB,QAAQ,CAAEP,WAA1B,EAFJ,CADJ,CAMH,CAjBD,CAmBA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CAAEF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MAArB,CAAP,CACH,CAFD,CAIA,cAAenB,CAAAA,OAAO,CAACoB,eAAD,CAAkB,CACpCrB,iBAAiB,CAAjBA,iBADoC,CAAlB,CAAP,CAEZW,SAFY,CAAf","sourcesContent":["import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input, createField } from '../common/FormControls/FormControls';\nimport { required } from '../../utils/validators/validators';\nimport { loginThunkCreator } from '../../redux/authReducer';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport style from '../../components/common/FormControls/FormControls.module.css'\n//import s from './Header.module.css';\n//import { NavLink } from 'react-router-dom';\n\n\n//const maxLength = maxLengthCreator(3);\n\nconst LoginForm = ({ handleSubmit, error }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n\n                {createField(\"Email\", \"email\", [required], Input)}\n                {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}    \n                {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}    \n\n            {error &&\n                <div className={style.formCommonError}>\n                    {error}\n                </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst ReduxLoginForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nconst LoginPage = (props) => {\n\n    const onSubmitted = (formData) => {\n        console.log(formData)\n        props.loginThunkCreator(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <ReduxLoginForm onSubmit={onSubmitted} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { isAuth: state.auth.isAuth }\n}\n\nexport default connect(mapStateToProps, {\n    loginThunkCreator\n})(LoginPage);"]},"metadata":{},"sourceType":"module"}