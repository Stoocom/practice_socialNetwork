{"ast":null,"code":"const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\n\nconst dialogsReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newMessage = {\n        id: state.messages.length + 1,\n        message: state.textAreaMessage\n      };\n      state.messages.push(newMessage);\n      state.textAreaMessage = '';\n      return state;\n\n    case UPDATE_NEW_MESSAGE_TEXT:\n      state.textAreaMessage = action.text;\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport const addMessageActionCreator = () => {\n  return {\n    type: ADD_MESSAGE\n  };\n};\nexport const updateNewMessageTextActionCreator = newText => {\n  return {\n    type: UPDATE_NEW_MESSAGE_TEXT,\n    text: newText\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/dialogsReducer.js"],"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","dialogsReducer","state","action","type","newMessage","id","messages","length","message","textAreaMessage","push","text","addMessageActionCreator","updateNewMessageTextActionCreator","newText"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,WAAL;AACI,UAAIM,UAAU,GAAG;AACbC,QAAAA,EAAE,EAAEJ,KAAK,CAACK,QAAN,CAAeC,MAAf,GAAwB,CADf;AAEbC,QAAAA,OAAO,EAAEP,KAAK,CAACQ;AAFF,OAAjB;AAIAR,MAAAA,KAAK,CAACK,QAAN,CAAeI,IAAf,CAAoBN,UAApB;AACAH,MAAAA,KAAK,CAACQ,eAAN,GAAwB,EAAxB;AACA,aAAOR,KAAP;;AACJ,SAAKF,uBAAL;AACIE,MAAAA,KAAK,CAACQ,eAAN,GAAwBP,MAAM,CAACS,IAA/B;AACA,aAAOV,KAAP;;AACJ;AACI,aAAOA,KAAP;AAbR;AAeH,CAhBD;;AAkBA,OAAO,MAAMW,uBAAuB,GAAG,MAAM;AACzC,SAAO;AAAET,IAAAA,IAAI,EAAEL;AAAR,GAAP;AACH,CAFM;AAGP,OAAO,MAAMe,iCAAiC,GAAIC,OAAD,IAAa;AAC1D,SAAO;AAAEX,IAAAA,IAAI,EAAEJ,uBAAR;AAAiCY,IAAAA,IAAI,EAAEG;AAAvC,GAAP;AACH,CAFM;AAIP,eAAed,cAAf","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE'\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\n\nconst dialogsReducer = (state, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            let newMessage = {\n                id: state.messages.length + 1,\n                message: state.textAreaMessage,\n            };\n            state.messages.push(newMessage);\n            state.textAreaMessage = '';\n            return state\n        case UPDATE_NEW_MESSAGE_TEXT:\n            state.textAreaMessage = action.text;\n            return state\n        default:\n            return state\n    }\n}\n\nexport const addMessageActionCreator = () => {\n    return { type: ADD_MESSAGE }\n}\nexport const updateNewMessageTextActionCreator = (newText) => {\n    return { type: UPDATE_NEW_MESSAGE_TEXT, text: newText }\n}\n\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}