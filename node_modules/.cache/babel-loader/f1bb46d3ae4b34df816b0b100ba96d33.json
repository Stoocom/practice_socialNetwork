{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_NEW_USERS = 'SET_NEW_USERS';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst SET_LOADING = 'SET_LOADING';\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalCount: 0,\n  currentPage: 1,\n  isLoading: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        }) // users: state.users.map((u) => {\n        //     if (u.id === action.userId) {\n        //         return {\n        //             ...u,\n        //             followed: false\n        //         }\n        //     }\n        //     return u\n        // })\n\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...action.users]\n      };\n\n    case SET_TOTAL_COUNT:\n      return { ...state,\n        totalCount: action.total\n      };\n\n    case SET_NEW_USERS:\n      return { ...state,\n        currentPage: action.count\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        isLoading: action.isLoading\n      };\n\n    case TOGGLE_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isLoading ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport const unfollowSuccess = userId => {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport const setCurrentPage = pageNumber => {\n  return {\n    type: SET_NEW_USERS,\n    count: pageNumber\n  };\n};\nexport const setTotalCount = totalCount => {\n  return {\n    type: SET_TOTAL_COUNT,\n    total: totalCount\n  };\n};\nexport const setLoading = isLoading => {\n  return {\n    type: SET_LOADING,\n    isLoading\n  };\n};\nexport const toggleFollowingProgress = (isLoading, userId) => {\n  return {\n    type: TOGGLE_FOLLOWING_PROGRESS,\n    isLoading,\n    userId\n  };\n};\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n  return async dispatch => {\n    dispatch(setLoading(true));\n    dispatch(setCurrentPage(currentPage));\n    let data = await usersAPI.getUsers(currentPage, pageSize);\n    dispatch(setLoading(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalCount(data.totalCount));\n  };\n};\nexport const follow = userId => {\n  return async dispatch => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await usersAPI.unfollow(userId);\n\n    if (response.data.resultCode === 0) {\n      console.log('Перевод в друзья');\n      dispatch(unfollowSuccess(userId));\n    }\n\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n};\nexport const unfollow = userId => {\n  return dispatch => {\n    dispatch(toggleFollowingProgress(true, userId));\n    usersAPI.follow(userId).then(response => {\n      if (response.data.resultCode === 0) {\n        console.log('Нет в друзьях');\n        dispatch(followSuccess(userId));\n      }\n\n      dispatch(toggleFollowingProgress(false, userId));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/usersReducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_NEW_USERS","SET_TOTAL_COUNT","SET_LOADING","TOGGLE_FOLLOWING_PROGRESS","initialState","users","pageSize","totalCount","currentPage","isLoading","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","total","count","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","pageNumber","setTotalCount","setLoading","toggleFollowingProgress","getUsersThunkCreator","dispatch","data","getUsers","items","follow","response","unfollow","resultCode","console","log","then"],"mappings":"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","sourcesContent":["import { usersAPI } from \"../api/api\"\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_NEW_USERS = 'SET_NEW_USERS'\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\nconst SET_LOADING = 'SET_LOADING'\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS'\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalCount: 0,\n    currentPage: 1,\n    isLoading: true,\n    followingInProgress: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return {\n                            ...u,\n                            followed: false\n                        }\n                    }\n                    return u\n                })\n                // users: state.users.map((u) => {\n                //     if (u.id === action.userId) {\n                //         return {\n                //             ...u,\n                //             followed: false\n                //         }\n                //     }\n                //     return u\n                // })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return {\n                            ...u,\n                            followed: true\n                        }\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.users],\n            }\n        case SET_TOTAL_COUNT:\n            return {\n                ...state,\n                totalCount: action.total,\n            }\n        case SET_NEW_USERS:\n            return {\n                ...state,\n                currentPage: action.count\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                isLoading: action.isLoading\n            }\n        case TOGGLE_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isLoading\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId),\n\n            }\n        default:\n            return state\n    }\n}\n\nexport const followSuccess = (userId) => { return { type: FOLLOW, userId } }\nexport const unfollowSuccess = (userId) => { return { type: UNFOLLOW, userId } }\nexport const setUsers = (users) => { return { type: SET_USERS, users } }\nexport const setCurrentPage = (pageNumber) => { return { type: SET_NEW_USERS, count: pageNumber } }\nexport const setTotalCount = (totalCount) => { return { type: SET_TOTAL_COUNT, total: totalCount } }\nexport const setLoading = (isLoading) => { return { type: SET_LOADING, isLoading } }\nexport const toggleFollowingProgress = (isLoading, userId) => { return { type: TOGGLE_FOLLOWING_PROGRESS, isLoading, userId } }\n\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n    return async dispatch => {\n        dispatch(setLoading(true))\n        dispatch(setCurrentPage(currentPage))\n    let data = await usersAPI.getUsers(currentPage, pageSize)\n        dispatch(setLoading(false))\n        dispatch(setUsers(data.items))\n        dispatch(setTotalCount(data.totalCount))\n    }\n}\nexport const follow = (userId) => {\n    return async dispatch => {\n        dispatch(toggleFollowingProgress(true, userId))\n        let response = await usersAPI.unfollow(userId)\n            if (response.data.resultCode === 0) {\n                console.log('Перевод в друзья')\n                dispatch(unfollowSuccess(userId))\n            }\n            dispatch(toggleFollowingProgress(false, userId))\n    }\n}\nexport const unfollow = (userId) => {\n    return dispatch => {\n        dispatch(toggleFollowingProgress(true, userId))\n        usersAPI.follow(userId).then(response => {\n            if (response.data.resultCode === 0) {\n                console.log('Нет в друзьях')\n                dispatch(followSuccess(userId))\n            }\n            dispatch(toggleFollowingProgress(false, userId))\n        })\n    }\n}\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}