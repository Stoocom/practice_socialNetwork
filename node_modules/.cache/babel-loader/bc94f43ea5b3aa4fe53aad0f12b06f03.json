{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_NEW_USERS = 'SET_NEW_USERS';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst SET_LOADING = 'SET_LOADING';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalCount: 0,\n  currentPage: 1,\n  isLoading: true,\n  followingInProgress\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        // users: [...state.users],\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...action.users]\n      };\n\n    case SET_TOTAL_COUNT:\n      return { ...state,\n        totalCount: action.total\n      };\n\n    case SET_NEW_USERS:\n      return { ...state,\n        currentPage: action.count\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        isLoading: action.isLoading\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport const unfollow = userId => {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport const setCurrentPage = pageNumber => {\n  return {\n    type: SET_NEW_USERS,\n    count: pageNumber\n  };\n};\nexport const setTotalCount = totalCount => {\n  return {\n    type: SET_TOTAL_COUNT,\n    total: totalCount\n  };\n};\nexport const setLoading = isLoading => {\n  return {\n    type: SET_LOADING,\n    isLoading\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_NEW_USERS","SET_TOTAL_COUNT","SET_LOADING","initialState","users","pageSize","totalCount","currentPage","isLoading","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","total","count","follow","unfollow","setUsers","setCurrentPage","pageNumber","setTotalCount","setLoading"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_NEW_USERS = 'SET_NEW_USERS'\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\nconst SET_LOADING = 'SET_LOADING'\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalCount: 0,\n    currentPage: 1,\n    isLoading: true,\n    followingInProgress,\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                // users: [...state.users],\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return { \n                            ...u, \n                            followed: false \n                        }\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return { \n                            ...u, \n                            followed: true \n                        }\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.users],\n            }\n        case SET_TOTAL_COUNT:\n            return {\n                ...state,\n                totalCount: action.total,\n            }\n        case SET_NEW_USERS:\n            return {\n                ...state,\n                currentPage: action.count\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                isLoading: action.isLoading\n            }\n        default:\n            return state\n    }\n}\n\nexport const follow = (userId) => {return { type: FOLLOW, userId }}\nexport const unfollow = (userId) => {return { type: UNFOLLOW, userId }}\nexport const setUsers = (users) => {return { type: SET_USERS, users }}\nexport const setCurrentPage = (pageNumber) => {return { type: SET_NEW_USERS, count: pageNumber }}\nexport const setTotalCount = (totalCount) => {return { type: SET_TOTAL_COUNT, total: totalCount }}\nexport const setLoading = (isLoading) => {return { type: SET_LOADING, isLoading }}\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}