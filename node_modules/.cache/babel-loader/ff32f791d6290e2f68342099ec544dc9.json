{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hello people!',\n        countLikes: '15'\n      }, {\n        id: 2,\n        message: \"I'm hunter\",\n        countLikes: '20'\n      }, {\n        id: 3,\n        message: \"I'll stay good programmer\",\n        countLikes: '15'\n      }],\n      textArea: '',\n      textAreaMessage: ''\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How are you?'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Alexander'\n      }, {\n        id: 2,\n        name: 'Natasha'\n      }, {\n        id: 3,\n        name: 'Katya'\n      }, {\n        id: 4,\n        name: 'Maxim'\n      }, {\n        id: 5,\n        name: 'Pasha'\n      }]\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _callSubscriber() {\n    console.log('State changed');\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  addPost() {\n    let newPost = {\n      id: this._state.profilePage.posts.length + 1,\n      message: this._state.profilePage.textArea,\n      countLikes: 0\n    };\n\n    this._state.profilePage.posts.push(newPost);\n\n    this._state.profilePage.textArea = '';\n\n    this._callSubscriber(this._state);\n  },\n\n  updateNewPostText(text) {\n    this._state.profilePage.textArea = text;\n\n    this._callSubscriber(this._state);\n  },\n\n  dispatch(action) {\n    // { type: 'ADD-POST'}\n    switch (action.type) {\n      case ADD_POST:\n        let newPost = {\n          id: this._state.profilePage.posts.length + 1,\n          message: this._state.profilePage.textArea,\n          countLikes: 0\n        };\n\n        this._state.profilePage.posts.push(newPost);\n\n        this._state.profilePage.textArea = '';\n\n        this._callSubscriber(this._state);\n\n        break;\n\n      case 'UPDATE-NEW-POST-TEXT':\n        this._state.profilePage.textArea = action.text;\n\n        this._callSubscriber(this._state);\n\n        break;\n\n      default:\n        console.log(\"Sorry\");\n    }\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = newText => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    text: newText\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","store","_state","profilePage","posts","id","message","countLikes","textArea","textAreaMessage","dialogsPage","messages","dialogs","name","getState","_callSubscriber","console","log","subscribe","observer","addPost","newPost","length","push","updateNewPostText","text","dispatch","action","type","addPostActionCreator","updateNewPostTextActionCreator","newText","window"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST'\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: 'Hello people!', countLikes: '15' },\n                { id: 2, message: \"I'm hunter\", countLikes: '20' },\n                { id: 3, message: \"I'll stay good programmer\", countLikes: '15' },\n            ],\n            textArea: '',\n            textAreaMessage: '',\n        },\n    \n        dialogsPage: {\n            messages: [\n                { id: 1, message: 'Hi' },\n                { id: 2, message: 'How are you?' },\n                { id: 3, message: 'Yo' },\n            ],\n            dialogs: [\n                { id: 1, name: 'Alexander' },\n                { id: 2, name: 'Natasha' },\n                { id: 3, name: 'Katya' },\n                { id: 4, name: 'Maxim' },\n                { id: 5, name: 'Pasha' },\n            ],\n        }\n    \n    },\n\n    getState() {\n        return this._state\n    },\n    _callSubscriber() {\n        console.log('State changed');\n    },subscribe(observer){\n        this._callSubscriber = observer\n    },\n\n    addPost() {   \n        let newPost = {\n            id: this._state.profilePage.posts.length + 1,\n            message: this._state.profilePage.textArea,\n            countLikes: 0\n        }\n        this._state.profilePage.posts.push(newPost)\n        this._state.profilePage.textArea = ''\n        this._callSubscriber(this._state)\n    },\n    updateNewPostText(text) {   \n        this._state.profilePage.textArea = text;\n        this._callSubscriber(this._state)\n    },\n    dispatch(action) { // { type: 'ADD-POST'}\n        \n        switch (action.type) {\n            case ADD_POST:\n                let newPost = {\n                    id: this._state.profilePage.posts.length + 1,\n                    message: this._state.profilePage.textArea,\n                    countLikes: 0\n                };\n                this._state.profilePage.posts.push(newPost);\n                this._state.profilePage.textArea = '';\n                this._callSubscriber(this._state);\n                break;\n            case 'UPDATE-NEW-POST-TEXT':\n                this._state.profilePage.textArea = action.text;\n                this._callSubscriber(this._state);\n                break;\n            default:\n                console.log(\"Sorry\");     \n        }\n    }\n}\n\nexport const addPostActionCreator = () => {\n    return {type: ADD_POST}\n}\n\nexport const updateNewPostTextActionCreator = (newText) => {\n    return {type: UPDATE_NEW_POST_TEXT, text: newText}\n}\n\nexport default store\nwindow.store = store\n\n"]},"metadata":{},"sourceType":"module"}