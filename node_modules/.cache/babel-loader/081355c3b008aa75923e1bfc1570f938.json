{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_NEW_USERS = 'SET_NEW_USERS';\nlet initialState = {\n  users: [],\n  pageSize: 20,\n  totalCount: 0,\n  currentPage: 1\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        // users: [...state.users],\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...action.users],\n        totalCount: action.total\n      };\n\n    case SET_NEW_USERS:\n      return { ...state,\n        currentPage: action.count\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport const unfollowAC = userId => {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport const setUsersAC = (users, totalCount) => {\n  return {\n    type: SET_USERS,\n    users,\n    total: totalCount\n  };\n};\nexport const setCurrentPageAC = pageNumber => {\n  return {\n    type: SET_NEW_USERS,\n    count: pageNumber\n  };\n};\nexport const setTotalCountAC = pageNumber => {\n  return {\n    type: SET_NEW_USERS,\n    count: pageNumber\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_NEW_USERS","initialState","users","pageSize","totalCount","currentPage","usersReducer","state","action","type","map","u","id","userId","followed","total","count","followAC","unfollowAC","setUsersAC","setCurrentPageAC","pageNumber","setTotalCountAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,QAAQ,EAAE,EAFK;AAGfC,EAAAA,UAAU,EAAE,CAHG;AAIfC,EAAAA,WAAW,EAAE;AAJE,CAAnB;;AAOA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,MAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEH;AACAL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,GAAZ,CAAiBC,CAAD,IAAO;AAC1B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EACH,GAAGF,CADA;AAEHG,cAAAA,QAAQ,EAAE;AAFP,aAAP;AAIH;;AACD,iBAAOH,CAAP;AACH,SARM;AAHJ,OAAP;;AAaJ,SAAKb,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,GAAZ,CAAiBC,CAAD,IAAO;AAC1B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EACH,GAAGF,CADA;AAEHG,cAAAA,QAAQ,EAAE;AAFP,aAAP;AAIH;;AACD,iBAAOH,CAAP;AACH,SARM;AAFJ,OAAP;;AAYJ,SAAKZ,SAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHL,QAAAA,KAAK,EAAE,CAAC,GAAGM,MAAM,CAACN,KAAX,CAFJ;AAGHE,QAAAA,UAAU,EAAEI,MAAM,CAACO;AAHhB,OAAP;;AAKJ,SAAKf,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACQ;AAFjB,OAAP;;AAIJ;AACI,aAAOT,KAAP;AAxCR;AA0CH,CA3CD;;AA6CA,OAAO,MAAMU,QAAQ,GAAIJ,MAAD,IAAY;AAAC,SAAO;AAAEJ,IAAAA,IAAI,EAAEZ,MAAR;AAAgBgB,IAAAA;AAAhB,GAAP;AAAgC,CAA9D;AACP,OAAO,MAAMK,UAAU,GAAIL,MAAD,IAAY;AAAC,SAAO;AAAEJ,IAAAA,IAAI,EAAEX,QAAR;AAAkBe,IAAAA;AAAlB,GAAP;AAAkC,CAAlE;AACP,OAAO,MAAMM,UAAU,GAAG,CAACjB,KAAD,EAAQE,UAAR,KAAuB;AAAC,SAAO;AAAEK,IAAAA,IAAI,EAAEV,SAAR;AAAmBG,IAAAA,KAAnB;AAA0Ba,IAAAA,KAAK,EAAEX;AAAjC,GAAP;AAAqD,CAAhG;AACP,OAAO,MAAMgB,gBAAgB,GAAIC,UAAD,IAAgB;AAAC,SAAO;AAAEZ,IAAAA,IAAI,EAAET,aAAR;AAAuBgB,IAAAA,KAAK,EAAEK;AAA9B,GAAP;AAAkD,CAA5F;AACP,OAAO,MAAMC,eAAe,GAAID,UAAD,IAAgB;AAAC,SAAO;AAAEZ,IAAAA,IAAI,EAAET,aAAR;AAAuBgB,IAAAA,KAAK,EAAEK;AAA9B,GAAP;AAAkD,CAA3F;AAEP,eAAef,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_NEW_USERS = 'SET_NEW_USERS'\n\nlet initialState = {\n    users: [],\n    pageSize: 20,\n    totalCount: 0,\n    currentPage: 1,\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                // users: [...state.users],\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return { \n                            ...u, \n                            followed: false \n                        }\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return { \n                            ...u, \n                            followed: true \n                        }\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.users],\n                totalCount: action.total,\n            }\n        case SET_NEW_USERS:\n            return {\n                ...state,\n                currentPage: action.count\n            }\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userId) => {return { type: FOLLOW, userId }}\nexport const unfollowAC = (userId) => {return { type: UNFOLLOW, userId }}\nexport const setUsersAC = (users, totalCount) => {return { type: SET_USERS, users, total: totalCount }}\nexport const setCurrentPageAC = (pageNumber) => {return { type: SET_NEW_USERS, count: pageNumber }}\nexport const setTotalCountAC = (pageNumber) => {return { type: SET_NEW_USERS, count: pageNumber }}\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}