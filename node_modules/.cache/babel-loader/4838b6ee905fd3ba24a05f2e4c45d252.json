{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Profile/MyPosts/MyPostsContainer.jsx\";\nimport React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\nimport StoreContext from '../../../redux/StoreContext';\n\nconst MyPostsContainer = props => {\n  // let state = props.store.getState()\n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator());\n  };\n\n  let onPostChange = newText => {\n    props.store.dispatch(updateNewPostTextActionCreator(newText));\n  };\n\n  return /*#__PURE__*/React.createElement(StoreContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, store => {\n    let state = store.getState();\n\n    let addPost = () => {\n      store.dispatch(addPostActionCreator());\n    };\n\n    let onPostChange = newText => {\n      store.dispatch(updateNewPostTextActionCreator(newText));\n    };\n\n    return /*#__PURE__*/React.createElement(MyPosts, {\n      updateNewPostTextActionCreator: onPostChange,\n      addPost: addPost,\n      posts: state.profilePage.posts,\n      textArea: state.profilePage.textArea // updateNewPostTextActionCreator={onPostChange}\n      // addPost={addPost}\n      // posts={state.profilePage.posts}\n      // textArea={state.profilePage.textArea}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    });\n  });\n};\n\nexport default MyPostsContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"names":["React","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","StoreContext","MyPostsContainer","props","addPost","store","dispatch","onPostChange","newText","state","getState","profilePage","posts","textArea"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,8BAA/B,QAAqE,+BAArE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC;AAGA,MAAIC,OAAO,GAAG,MAAM;AAChBD,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBR,oBAAoB,EAAzC;AACH,GAFD;;AAGA,MAAIS,YAAY,GAAIC,OAAD,IAAa;AAC5BL,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBP,8BAA8B,CAACS,OAAD,CAAnD;AACH,GAFD;;AAIA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESH,KAAD,IAAW;AACP,QAAII,KAAK,GAAGJ,KAAK,CAACK,QAAN,EAAZ;;AACA,QAAIN,OAAO,GAAG,MAAM;AAChBC,MAAAA,KAAK,CAACC,QAAN,CAAeR,oBAAoB,EAAnC;AACH,KAFD;;AAGA,QAAIS,YAAY,GAAIC,OAAD,IAAa;AAC5BH,MAAAA,KAAK,CAACC,QAAN,CAAeP,8BAA8B,CAACS,OAAD,CAA7C;AACH,KAFD;;AAIA,wBAAQ,oBAAC,OAAD;AACJ,MAAA,8BAA8B,EAAED,YAD5B;AAEJ,MAAA,OAAO,EAAEH,OAFL;AAGJ,MAAA,KAAK,EAAEK,KAAK,CAACE,WAAN,CAAkBC,KAHrB;AAIJ,MAAA,QAAQ,EAAEH,KAAK,CAACE,WAAN,CAAkBE,QAJxB,CAKR;AACA;AACA;AACA;AARQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAUH,GArBT,CADJ;AA0BH,CArCD;;AAuCA,eAAeX,gBAAf","sourcesContent":["import React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\nimport StoreContext from '../../../redux/StoreContext';\n\n\nconst MyPostsContainer = (props) => {\n    // let state = props.store.getState()\n\n\n    let addPost = () => {\n        props.store.dispatch(addPostActionCreator())\n    }\n    let onPostChange = (newText) => {\n        props.store.dispatch(updateNewPostTextActionCreator(newText))\n    }\n\n    return (\n        <StoreContext.Consumer>\n            {\n                (store) => {\n                    let state = store.getState()\n                    let addPost = () => {\n                        store.dispatch(addPostActionCreator())\n                    }\n                    let onPostChange = (newText) => {\n                        store.dispatch(updateNewPostTextActionCreator(newText))\n                    }\n                \n                    return (<MyPosts\n                        updateNewPostTextActionCreator={onPostChange}\n                        addPost={addPost}\n                        posts={state.profilePage.posts}\n                        textArea={state.profilePage.textArea}\n                    // updateNewPostTextActionCreator={onPostChange}\n                    // addPost={addPost}\n                    // posts={state.profilePage.posts}\n                    // textArea={state.profilePage.textArea}\n                    />)\n                }\n            }\n        </StoreContext.Consumer>\n    )\n}\n\nexport default MyPostsContainer"]},"metadata":{},"sourceType":"module"}