{"ast":null,"code":"import { getLoginThunkCreator } from \"./authReducer\";\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: SET_INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => dispatch => {\n  let dispatchResult = dispatch(getLoginThunkCreator());\n  debugger;\n  dispatch(initializedSuccess());\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/appReducer.js"],"names":["getLoginThunkCreator","SET_INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","dispatchResult"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,eAArC;AAGA,MAAMC,uBAAuB,GAAG,yBAAhC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,uBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAA3B;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAAMC,QAAQ,IAAI;AAC3C,MAAIC,cAAc,GAAGD,QAAQ,CAACV,oBAAoB,EAArB,CAA7B;AACA;AACAU,EAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,CAJM;AAOP,eAAeJ,UAAf","sourcesContent":["import { getLoginThunkCreator } from \"./authReducer\"\n\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS'\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            }\n        default:\n            return state\n    }\n}\n\nexport const initializedSuccess = () => ({ type: SET_INITIALIZED_SUCCESS })\n\nexport const initializeApp = () => dispatch => {\n    let dispatchResult = dispatch(getLoginThunkCreator())\n    debugger\n    dispatch(initializedSuccess())\n}\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}