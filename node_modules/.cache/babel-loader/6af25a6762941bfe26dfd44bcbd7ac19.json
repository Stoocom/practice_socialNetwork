{"ast":null,"code":"import React from'react';import s from'./Dialogs.module.css';import DialogItem from'./DialogItem/DialogItem';import Message from'./Message/Message';import{Redirect}from'react-router-dom';import{reduxForm,Field}from'redux-form';import{Textarea}from'../common/FormControls/FormControls';import{required,maxLengthCreator}from'../../utils/validators/validators';//import { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nvar Dialogs=function Dialogs(props){var onSubmitted=function onSubmitted(formData){console.log(formData);props.addMessage(formData.message);};return/*#__PURE__*/React.createElement(\"div\",{className:s.dialogs},/*#__PURE__*/React.createElement(\"div\",{className:s.messages},props.dialogs.dialogs.map(function(d){return/*#__PURE__*/React.createElement(DialogItem,{key:d.id,name:d.name,id:d.id});})),/*#__PURE__*/React.createElement(\"div\",{className:s.messages},props.dialogs.messages.map(function(m){return/*#__PURE__*/React.createElement(Message,{key:m.id,message:m.message,id:m.id});})),/*#__PURE__*/React.createElement(\"div\",{className:s.messages_block_c},/*#__PURE__*/React.createElement(\"div\",{className:s.messagesNew},/*#__PURE__*/React.createElement(\"h3\",null,\"New message\"),/*#__PURE__*/React.createElement(ReduxDialogsForm,{onSubmit:onSubmitted}))));};var maxLength=maxLengthCreator(20);var DialogsForm=function DialogsForm(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(Field,{placeholder:\"Enter your message\",name:\"message\",component:Textarea,validate:[required,maxLength]}),/*#__PURE__*/React.createElement(\"div\",{className:s.newMessage__button},/*#__PURE__*/React.createElement(\"button\",null,\"Add message\")));};var ReduxDialogsForm=reduxForm({form:'message'})(DialogsForm);export default Dialogs;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","Redirect","reduxForm","Field","Textarea","required","maxLengthCreator","Dialogs","props","onSubmitted","formData","console","log","addMessage","message","dialogs","messages","map","d","id","name","m","messages_block_c","messagesNew","maxLength","DialogsForm","handleSubmit","newMessage__button","ReduxDialogsForm","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,YAAjC,CACA,OAASC,QAAT,KAAyB,qCAAzB,CACA,OAASC,QAAT,CAAmBC,gBAAnB,KAA2C,mCAA3C,CACA;AAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAGvB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAc,CAC9BC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAF,KAAK,CAACK,UAAN,CAAiBH,QAAQ,CAACI,OAA1B,EACH,CAHD,CAKA,mBACI,2BAAK,SAAS,CAAEhB,CAAC,CAACiB,OAAlB,eACI,2BAAK,SAAS,CAAEjB,CAAC,CAACkB,QAAlB,EAEQR,KAAK,CAACO,OAAN,CAAcA,OAAd,CAAsBE,GAAtB,CAA0B,SAACC,CAAD,CAAO,CAC7B,mBAAQ,oBAAC,UAAD,EAAY,GAAG,CAAEA,CAAC,CAACC,EAAnB,CAAuB,IAAI,CAAED,CAAC,CAACE,IAA/B,CAAqC,EAAE,CAAEF,CAAC,CAACC,EAA3C,EAAR,CACH,CAFD,CAFR,CADJ,cAQI,2BAAK,SAAS,CAAErB,CAAC,CAACkB,QAAlB,EAEQR,KAAK,CAACO,OAAN,CAAcC,QAAd,CAAuBC,GAAvB,CAA2B,SAACI,CAAD,CAAO,CAC9B,mBAAQ,oBAAC,OAAD,EAAS,GAAG,CAAEA,CAAC,CAACF,EAAhB,CAAoB,OAAO,CAAEE,CAAC,CAACP,OAA/B,CAAwC,EAAE,CAAEO,CAAC,CAACF,EAA9C,EAAR,CACH,CAFD,CAFR,CARJ,cAeI,2BAAK,SAAS,CAAErB,CAAC,CAACwB,gBAAlB,eACI,2BAAK,SAAS,CAAExB,CAAC,CAACyB,WAAlB,eACI,4CADJ,cAEI,oBAAC,gBAAD,EAAkB,QAAQ,CAAEd,WAA5B,EAFJ,CADJ,CAfJ,CADJ,CAwBH,CAhCD,CAkCA,GAAMe,CAAAA,SAAS,CAAGlB,gBAAgB,CAAC,EAAD,CAAlC,CAEA,GAAMmB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACjB,KAAD,CAAW,CAC3B,mBACI,4BAAM,QAAQ,CAAEA,KAAK,CAACkB,YAAtB,eACI,oBAAC,KAAD,EACI,WAAW,CAAC,oBADhB,CAEI,IAAI,CAAC,SAFT,CAGI,SAAS,CAAEtB,QAHf,CAII,QAAQ,CAAE,CAACC,QAAD,CAAWmB,SAAX,CAJd,EADJ,cAOI,2BAAK,SAAS,CAAE1B,CAAC,CAAC6B,kBAAlB,eACI,gDADJ,CAPJ,CADJ,CAaH,CAdD,CAgBA,GAAMC,CAAAA,gBAAgB,CAAG1B,SAAS,CAAC,CAC/B2B,IAAI,CAAE,SADyB,CAAD,CAAT,CAEtBJ,WAFsB,CAAzB,CAIA,cAAelB,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { reduxForm, Field } from 'redux-form';\nimport { Textarea } from '../common/FormControls/FormControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\n//import { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\n\nconst Dialogs = (props) => {\n\n\n    const onSubmitted = (formData) => {\n        console.log(formData)\n        props.addMessage(formData.message)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.messages}>\n                {\n                    props.dialogs.dialogs.map((d) => {\n                        return (<DialogItem key={d.id} name={d.name} id={d.id} />)\n                    })\n                }\n            </div>\n            <div className={s.messages}>\n                {\n                    props.dialogs.messages.map((m) => {\n                        return (<Message key={m.id} message={m.message} id={m.id} />)\n                    })\n                }\n            </div>\n            <div className={s.messages_block_c}>\n                <div className={s.messagesNew}>\n                    <h3>New message</h3>\n                    <ReduxDialogsForm onSubmit={onSubmitted} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst maxLength = maxLengthCreator(20);\n\nconst DialogsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field \n                placeholder=\"Enter your message\" \n                name=\"message\" \n                component={Textarea}\n                validate={[required, maxLength]}\n            ></Field>\n            <div className={s.newMessage__button}>\n                <button >Add message</button>\n            </div>\n        </form>\n    )\n}\n\nconst ReduxDialogsForm = reduxForm({\n    form: 'message'\n})(DialogsForm)\n\nexport default Dialogs"]},"metadata":{},"sourceType":"module"}