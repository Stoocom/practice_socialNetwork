{"ast":null,"code":"//import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: () => {\n      dispatch(addMessageActionCreator());\n    },\n    updateNewMessageText: body => {\n      dispatch(updateNewMessageTextActionCreator(body));\n    }\n  };\n};\n\nconst MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default MyDialogsContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Dialogs/MyDialogsContainer.jsx"],"names":["addMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","connect","mapStateToProps","state","dialogs","dialogsPage","mapDispatchToProps","dispatch","addMessage","updateNewMessageText","body","MyDialogsContainer"],"mappings":"AAAA;AACA,SAASA,uBAAT,EAAkCC,iCAAlC,QAA2E,4BAA3E;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE;AADZ,GAAP;AAGH,CAJD;;AAKA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,UAAU,EAAE,MAAM;AAAED,MAAAA,QAAQ,CAACT,uBAAuB,EAAxB,CAAR;AAAqC,KADtD;AAEHW,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAAEH,MAAAA,QAAQ,CAACR,iCAAiC,CAACW,IAAD,CAAlC,CAAR;AAAmD;AAFlF,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGV,OAAO,CAACC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CN,OAA7C,CAA3B;AAEA,eAAeW,kBAAf","sourcesContent":["//import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: () => { dispatch(addMessageActionCreator()) },\n        updateNewMessageText: (body) => { dispatch(updateNewMessageTextActionCreator(body)) }\n    }\n}\n\nconst MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\nexport default MyDialogsContainer"]},"metadata":{},"sourceType":"module"}