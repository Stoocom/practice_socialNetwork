{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Login/index.jsx\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input } from '../common/FormControls/FormControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\nimport { loginThunkCreator, logoutThunkCreator } from '../../redux/authReducer';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'; //import s from './Header.module.css';\n//import { NavLink } from 'react-router-dom';\n\nconst maxLength = maxLengthCreator(10);\n\nconst LoginForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    placeholder: \"Email\",\n    name: \"email\",\n    component: Input,\n    validate: [required, maxLength],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    placeholder: \"Password\",\n    name: \"password\",\n    type: password,\n    component: Input,\n    validate: [required, maxLength],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"rememberMe\",\n    component: Input,\n    validate: [required, maxLength],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), \"remember me\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nconst ReduxLoginForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst LoginPage = props => {\n  const onSubmitted = formData => {\n    props.loginThunkCreator(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/profile',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(ReduxLoginForm, {\n    onSubmit: onSubmitted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default connect(mapStatetoProps, {\n  loginThunkCreator,\n  logoutThunkCreator\n})(LoginPage);","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Login/index.jsx"],"names":["React","reduxForm","Field","Input","required","maxLengthCreator","loginThunkCreator","logoutThunkCreator","connect","Redirect","maxLength","LoginForm","props","handleSubmit","password","ReduxLoginForm","form","LoginPage","onSubmitted","formData","email","rememberMe","isAuth","mapStatetoProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,qCAAtB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,mCAA3C;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,yBAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;AACA;;AAGA,MAAMC,SAAS,GAAGL,gBAAgB,CAAC,EAAD,CAAlC;;AAEA,MAAMM,SAAS,GAAIC,KAAD,IAAW;AACzB,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAE,OADjB;AAEI,IAAA,IAAI,EAAE,OAFV;AAGI,IAAA,SAAS,EAAEV,KAHf;AAII,IAAA,QAAQ,EAAE,CAACC,QAAD,EAAWM,SAAX,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,UAApB;AAAgC,IAAA,IAAI,EAAE,UAAtC;AAAkD,IAAA,IAAI,EAAEI,QAAxD;AACA,IAAA,SAAS,EAAEX,KADX;AACkB,IAAA,QAAQ,EAAE,CAACC,QAAD,EAAWM,SAAX,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,UAAb;AAAyB,IAAA,IAAI,EAAE,YAA/B;AAA6C,IAAA,SAAS,EAAEP,KAAxD;AAA+D,IAAA,QAAQ,EAAE,CAACC,QAAD,EAAWM,SAAX,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,gBAbJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAjBJ,CADJ;AAuBH,CAxBD;;AA0BA,MAAMK,cAAc,GAAGd,SAAS,CAAE;AAC9Be,EAAAA,IAAI,EAAE;AADwB,CAAF,CAAT,CAEpBL,SAFoB,CAAvB;;AAIA,MAAMM,SAAS,GAAIL,KAAD,IAAW;AAEzB,QAAMM,WAAW,GAAIC,QAAD,IAAc;AAC9BP,IAAAA,KAAK,CAACN,iBAAN,CAAwBa,QAAQ,CAACC,KAAjC,EAAwCD,QAAQ,CAACL,QAAjD,EAA2DK,QAAQ,CAACE,UAApE;AACH,GAFD;;AAIA,MAAIT,KAAK,CAACU,MAAV,EAAkB;AACd,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEJ,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAhBD;;AAiBA,eAAeV,OAAO,CAACe,eAAD,EAAkB;AACpCjB,EAAAA,iBADoC;AAEpCC,EAAAA;AAFoC,CAAlB,CAAP,CAGZU,SAHY,CAAf","sourcesContent":["import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input } from '../common/FormControls/FormControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\nimport { loginThunkCreator, logoutThunkCreator } from '../../redux/authReducer';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n//import s from './Header.module.css';\n//import { NavLink } from 'react-router-dom';\n\n\nconst maxLength = maxLengthCreator(10);\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field \n                    placeholder={\"Email\"} \n                    name={\"email\"} \n                    component={Input}\n                    validate={[required, maxLength]}\n                ></Field>\n            </div>\n            <div>\n                <Field placeholder={\"Password\"} name={\"password\"} type={password}\n                component={Input} validate={[required, maxLength]} ></Field>\n            </div>\n            <div>\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} validate={[required, maxLength]}></Field>\n                    remember me\n                </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst ReduxLoginForm = reduxForm ({\n    form: 'login'\n})(LoginForm)\n\nconst LoginPage = (props) => {\n\n    const onSubmitted = (formData) => {\n        props.loginThunkCreator(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <ReduxLoginForm onSubmit={onSubmitted} />\n        </div>\n    )\n}\nexport default connect(mapStatetoProps, {\n    loginThunkCreator,\n    logoutThunkCreator\n})(LoginPage);"]},"metadata":{},"sourceType":"module"}