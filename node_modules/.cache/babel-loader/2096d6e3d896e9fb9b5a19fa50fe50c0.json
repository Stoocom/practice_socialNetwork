{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Dialogs/MyDialogsContainer.jsx\";\n//import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: () => {\n      dispatch(addMessageActionCreator());\n    },\n    updateNewMessageText: body => {\n      dispatch(updateNewMessageTextActionCreator(body));\n    }\n  };\n};\n\nlet AuthRedirectContainer = props => {\n  if (props.isAuth === false) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Dialogs, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }));\n};\n\nconst MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer);\nexport default MyDialogsContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Dialogs/MyDialogsContainer.jsx"],"names":["addMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","connect","mapStateToProps","state","dialogs","dialogsPage","isAuth","auth","mapDispatchToProps","dispatch","addMessage","updateNewMessageText","body","AuthRedirectContainer","props","MyDialogsContainer"],"mappings":";AAAA;AACA,SAASA,uBAAT,EAAkCC,iCAAlC,QAA2E,4BAA3E;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE,WADZ;AAEHC,IAAAA,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD;AAFhB,GAAP;AAIH,CALD;;AAMA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,UAAU,EAAE,MAAM;AAAED,MAAAA,QAAQ,CAACX,uBAAuB,EAAxB,CAAR;AAAqC,KADtD;AAEHa,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAAEH,MAAAA,QAAQ,CAACV,iCAAiC,CAACa,IAAD,CAAlC,CAAR;AAAmD;AAFlF,GAAP;AAIH,CALD;;AAMA,IAAIC,qBAAqB,GAAIC,KAAD,IAAW;AACnC,MAAIA,KAAK,CAACR,MAAN,KAAiB,KAArB,EAA4B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,sBAAO,oBAAC,OAAD,oBAAaQ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CALD;;AAOA,MAAMC,kBAAkB,GAAGd,OAAO,CAACC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CK,qBAA7C,CAA3B;AAEA,eAAeE,kBAAf","sourcesContent":["//import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage,\n        isAuth: state.auth.isAuth,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: () => { dispatch(addMessageActionCreator()) },\n        updateNewMessageText: (body) => { dispatch(updateNewMessageTextActionCreator(body)) }\n    }\n}\nlet AuthRedirectContainer = (props) => {\n    if (props.isAuth === false) {\n        return <Redirect to='/login' />\n    }\n    return <Dialogs {...props} />\n}\n\nconst MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer)\n\nexport default MyDialogsContainer"]},"metadata":{},"sourceType":"module"}