{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from './Profile';\nimport { getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator } from '../../redux/profileReducer';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorisedUserId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getProfileThunkCreator(userId);\n    this.props.getStatusThunkCreator(userId); //this.props.updateStatusThunkCreator('Статус')\n    // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n    //     .then(response => {\n    //         //this.props.setLoading(false)\n    //         this.props.setUserProfile(response.data)\n    //     })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorisedUserId: state.auth.id,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getProfileThunkCreator,\n  getStatusThunkCreator,\n  updateStatusThunkCreator\n}), withRouter //withAuthRedirect,\n)(ProfileContainer); // let AuthRedirectContainer = withAuthRedirect(ProfileContainer)\n// let withUrlDataContainerComponent = withRouter(AuthRedirectContainer)\n// export default connect(mapStateToProps, {getProfileThunkCreator}) (withUrlDataContainerComponent)","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","getProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","connect","withRouter","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","authorisedUserId","history","push","render","mapStateToProps","state","profile","profilePage","status","auth","id","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,sBAAT,EAAiCC,qBAAjC,EAAwDC,wBAAxD,QAAwF,4BAAxF;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAG3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;AACA,UAAI,CAACJ,MAAL,EAAa;AACT,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AACD,SAAKL,KAAL,CAAWV,sBAAX,CAAkCS,MAAlC;AACA,SAAKC,KAAL,CAAWT,qBAAX,CAAiCQ,MAAjC,EATgB,CAUhB;AACA;AACA;AACA;AACA;AACA;AAEH;;AAEGO,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,OAAD,oBAAa,KAAKN,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAOH;;AA9BsC;;AAiC/C,IAAIO,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBD,OADxB;AAEHE,IAAAA,MAAM,EAAEH,KAAK,CAACE,WAAN,CAAkBC,MAFvB;AAGHR,IAAAA,gBAAgB,EAAEK,KAAK,CAACI,IAAN,CAAWC,EAH1B;AAIHC,IAAAA,MAAM,EAAEN,KAAK,CAACI,IAAN,CAAWE;AAJhB,GAAP;AAMH,CAPD;;AASA,eAAenB,OAAO,CAClBF,OAAO,CAACc,eAAD,EAAkB;AAAEjB,EAAAA,sBAAF;AAA0BC,EAAAA,qBAA1B;AAAiDC,EAAAA;AAAjD,CAAlB,CADW,EAElBE,UAFkB,CAGlB;AAHkB,CAAP,CAIbE,gBAJa,CAAf,C,CAMA;AAEA;AAEA","sourcesContent":["import React from 'react';\nimport Profile from './Profile';\nimport { getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator } from '../../redux/profileReducer';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n    \n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorisedUserId\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfileThunkCreator(userId)\n        this.props.getStatusThunkCreator(userId)\n        //this.props.updateStatusThunkCreator('Статус')\n        // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n        //     .then(response => {\n        //         //this.props.setLoading(false)\n        //         this.props.setUserProfile(response.data)\n        //     })\n\n    }\n\n        render() {\n            return (\n                <Profile {...this.props}\n                // profile = { this.props.profile }\n                // status = { this.props.status }\n                // updateStatus = { this.props.updateStatusThunkCreator}\n                />\n            )\n        }\n    }\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorisedUserId: state.auth.id,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator }),\n    withRouter,\n    //withAuthRedirect,\n)(ProfileContainer)\n\n// let AuthRedirectContainer = withAuthRedirect(ProfileContainer)\n\n// let withUrlDataContainerComponent = withRouter(AuthRedirectContainer)\n\n// export default connect(mapStateToProps, {getProfileThunkCreator}) (withUrlDataContainerComponent)"]},"metadata":{},"sourceType":"module"}