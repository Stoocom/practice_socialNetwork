{"ast":null,"code":"import React from'react';import{addMessageActionCreator}from'../../redux/dialogsReducer';import Dialogs from'./Dialogs';import{connect}from'react-redux';import{withAuthRedirect}from'../hoc/withAuthRedirect';import{compose}from'redux';var mapStateToProps=function mapStateToProps(state){return{dialogs:state.dialogsPage};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addMessage:function addMessage(formData){dispatch(addMessageActionCreator(formData));}};};var MyDialogsContainer=compose(connect(mapStateToProps,mapDispatchToProps),withAuthRedirect)(Dialogs);// let AuthRedirectContainer = withAuthRedirect(Dialogs)\n// const MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer)\nexport default MyDialogsContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Dialogs/MyDialogsContainer.jsx"],"names":["React","addMessageActionCreator","Dialogs","connect","withAuthRedirect","compose","mapStateToProps","state","dialogs","dialogsPage","mapDispatchToProps","dispatch","addMessage","formData","MyDialogsContainer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,uBAAT,KAAwC,4BAAxC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,gBAAT,KAAiC,yBAAjC,CACA,OAASC,OAAT,KAAwB,OAAxB,CAGA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHC,OAAO,CAAED,KAAK,CAACE,WADZ,CAAP,CAGH,CAJD,CAKA,GAAIC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAO,CACHC,UAAU,CAAE,oBAACC,QAAD,CAAc,CAAEF,QAAQ,CAACV,uBAAuB,CAACY,QAAD,CAAxB,CAAR,CAA6C,CADtE,CAAP,CAIH,CALD,CAOA,GAAIC,CAAAA,kBAAkB,CAAGT,OAAO,CAC5BF,OAAO,CAACG,eAAD,CAAkBI,kBAAlB,CADqB,CAE5BN,gBAF4B,CAAP,CAGvBF,OAHuB,CAAzB,CAKA;AAEA;AAEA,cAAeY,CAAAA,kBAAf","sourcesContent":["import React from 'react';\nimport { addMessageActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (formData) => { dispatch(addMessageActionCreator(formData)) },\n        \n    }\n}\n\nlet MyDialogsContainer = compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Dialogs) \n\n// let AuthRedirectContainer = withAuthRedirect(Dialogs)\n\n// const MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectContainer)\n\nexport default MyDialogsContainer"]},"metadata":{},"sourceType":"module"}