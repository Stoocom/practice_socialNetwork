{"ast":null,"code":"import React,{Component}from'react';import s from'./MyPosts.module.css';import Post from'./Post/Post';import{reduxForm,Field}from'redux-form';import{required,maxLengthCreator}from'../../../utils/validators/validators';import{Textarea}from'../../common/FormControls/FormControls';//import { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profileReducer';\nvar MyPosts=React.memo(function(props){// shouldComponentUpdate(nextProps, nextState){\n//     return false;\n// }\nvar onAddPost=function onAddPost(value){props.addPost(value.message);};// let onPostChange = (event) => {\n//     props.updateNewPostTextActionCreator(event.target.value)\n// }\nreturn/*#__PURE__*/React.createElement(\"div\",{className:s.postsBlock},/*#__PURE__*/React.createElement(\"h3\",null,\"My posts\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ReduxDialogsForm,{onSubmit:onAddPost})),/*#__PURE__*/React.createElement(\"div\",{className:s.posts},props.posts.map(function(p){return/*#__PURE__*/React.createElement(Post,{key:p.id,message:p.message,countLikes:p.countLikes});})));});var maxLength10=maxLengthCreator(10);var PostsForm=function PostsForm(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(Field,{placeholder:\"Enter your post\",name:\"message\",component:Textarea,validate:[required,maxLength10]}),/*#__PURE__*/React.createElement(\"div\",{className:s.myPost__button},/*#__PURE__*/React.createElement(\"button\",null,\"Add post\")));};var ReduxDialogsForm=reduxForm({form:'ProfileAddNewPost'})(PostsForm);export default MyPosts;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","Component","s","Post","reduxForm","Field","required","maxLengthCreator","Textarea","MyPosts","memo","props","onAddPost","value","addPost","message","postsBlock","posts","map","p","id","countLikes","maxLength10","PostsForm","handleSubmit","myPost__button","ReduxDialogsForm","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,YAAjC,CACA,OAASC,QAAT,CAAmBC,gBAAnB,KAA2C,sCAA3C,CACA,OAASC,QAAT,KAAyB,wCAAzB,CACA;AAGA,GAAMC,CAAAA,OAAO,CAAGT,KAAK,CAACU,IAAN,CAAW,SAAAC,KAAK,CAAI,CAChC;AACA;AACA;AACA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACvBF,KAAK,CAACG,OAAN,CAAcD,KAAK,CAACE,OAApB,EACH,CAFD,CAGA;AACA;AACA;AACA,mBACI,2BAAK,SAAS,CAAEb,CAAC,CAACc,UAAlB,eACI,yCADJ,cAEI,4CACI,oBAAC,gBAAD,EAAkB,QAAQ,CAAEJ,SAA5B,EADJ,CAFJ,cAKI,2BAAK,SAAS,CAAEV,CAAC,CAACe,KAAlB,EACKN,KAAK,CAACM,KAAN,CAAYC,GAAZ,CAAgB,SAACC,CAAD,qBAAO,oBAAC,IAAD,EAAM,GAAG,CAAEA,CAAC,CAACC,EAAb,CAAiB,OAAO,CAAED,CAAC,CAACJ,OAA5B,CAAqC,UAAU,CAAEI,CAAC,CAACE,UAAnD,EAAP,EAAhB,CADL,CALJ,CADJ,CAWH,CArBe,CAAhB,CAwBA,GAAMC,CAAAA,WAAW,CAAGf,gBAAgB,CAAC,EAAD,CAApC,CAGA,GAAMgB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACZ,KAAD,CAAW,CACzB,mBACI,4BAAM,QAAQ,CAAEA,KAAK,CAACa,YAAtB,eAEI,oBAAC,KAAD,EACI,WAAW,CAAC,iBADhB,CAEI,IAAI,CAAC,SAFT,CAGI,SAAS,CAAEhB,QAHf,CAII,QAAQ,CAAE,CAACF,QAAD,CAAWgB,WAAX,CAJd,EAFJ,cASI,2BAAK,SAAS,CAAEpB,CAAC,CAACuB,cAAlB,eACI,6CADJ,CATJ,CADJ,CAkBH,CAnBD,CAqBA,GAAMC,CAAAA,gBAAgB,CAAGtB,SAAS,CAAC,CAC/BuB,IAAI,CAAE,mBADyB,CAAD,CAAT,CAEtBJ,SAFsB,CAAzB,CAKA,cAAed,CAAAA,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { reduxForm, Field } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormControls/FormControls';\n//import { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profileReducer';\n\n\nconst MyPosts = React.memo(props => {\n    // shouldComponentUpdate(nextProps, nextState){\n    //     return false;\n    // }\n    let onAddPost = (value) => {\n        props.addPost(value.message)\n    }\n    // let onPostChange = (event) => {\n    //     props.updateNewPostTextActionCreator(event.target.value)\n    // }\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <ReduxDialogsForm onSubmit={onAddPost} />\n            </div>\n            <div className={s.posts}>\n                {props.posts.map((p) => <Post key={p.id} message={p.message} countLikes={p.countLikes} />)}\n            </div>\n        </div>\n    )\n})\n\n\nconst maxLength10 = maxLengthCreator(10);\n\n\nconst PostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n\n            <Field\n                placeholder=\"Enter your post\"\n                name=\"message\"\n                component={Textarea}\n                validate={[required, maxLength10]}\n            ></Field>\n\n            <div className={s.myPost__button}>\n                <button\n\n                >Add post</button>\n\n            </div>\n        </form>\n    )\n}\n\nconst ReduxDialogsForm = reduxForm({\n    form: 'ProfileAddNewPost'\n})(PostsForm)\n\n\nexport default MyPosts"]},"metadata":{},"sourceType":"module"}