{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/UsersContainer.jsx\";\nimport { connect } from 'react-redux';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setTotalCountAC } from '../../redux/usersReducer';\nimport Users from './Users';\nimport axios from 'axios';\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.unFollow = id => {\n      this.props.unfollow(id);\n    };\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalCount(response.data.totalCount / 100);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      totalCount: this.props.totalCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unFollow: this.unFollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalCount: state.usersPage.totalCount,\n    currentPage: state.usersPage.currentPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: id => {\n      dispatch(followAC(id));\n    },\n    unfollow: id => {\n      dispatch(unfollowAC(id));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalCount: totalCount => {\n      dispatch(setTotalCountAC(totalCount));\n    }\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent);\nexport default UsersContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/UsersContainer.jsx"],"names":["connect","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setTotalCountAC","Users","axios","UsersAPIComponent","React","Component","unFollow","id","props","unfollow","onPageChanged","pageNumber","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalCount","totalCount","render","users","follow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","UsersContainer"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setTotalCountAC } from '../../redux/usersReducer';\nimport Users from './Users'\nimport axios from 'axios'\n\nclass UsersAPIComponent extends React.Component {\n\n    unFollow = (id) => {\n        this.props.unfollow(id)\n    }\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items)\n                this.props.setTotalCount(response.data.totalCount / 100)\n            })\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items)\n            })\n    }\n\n    render() {\n        return <Users\n            totalCount={this.props.totalCount}\n            pageSize={this.props.pageSize}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n            users={this.props.users}\n            follow={this.props.follow}\n            unFollow={this.unFollow}\n        />\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalCount: state.usersPage.totalCount,\n        currentPage: state.usersPage.currentPage\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (id) => { dispatch(followAC(id)) },\n        unfollow: (id) => { dispatch(unfollowAC(id)) },\n        setUsers: (users) => { dispatch(setUsersAC(users)) },\n        setCurrentPage: (pageNumber) => { dispatch(setCurrentPageAC(pageNumber)) },\n        setTotalCount: (totalCount) => { dispatch(setTotalCountAC(totalCount)) }\n    }\n}\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent)\n\nexport default UsersContainer"]},"metadata":{},"sourceType":"module"}