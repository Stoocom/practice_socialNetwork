{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/Users.jsx\";\nimport React from 'react';\nimport s from './Users.module.css';\nimport userPhoto from '../../assets/images/default_icon.jpg';\n\nlet Users = props => {\n  let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, pages.map(i => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.setNewUsers(i),\n      key: i,\n      className: this.props.currentPage === i ? s.selectedPage : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 32\n      }\n    }, i);\n  })), this.props.users.map(user => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.user,\n      key: user.id + user.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: s.avatar,\n      src: user.photos.small != null ? user.photos.small : userPhoto,\n      alt: \"avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    })), user.followed ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.follow(user.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 35\n      }\n    }, \"\\u0414\\u0440\\u0443\\u0433\") : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.unfollow(user.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 35\n      }\n    }, \"\\u041D\\u0435 \\u0432 \\u0434\\u0440\\u0443\\u0437\\u044C\\u044F\\u0445\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, user.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, user.status), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, \"user.location.country\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, \"user.location.city\")));\n  }));\n};\n\nexport default Users;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/Users.jsx"],"names":["React","s","userPhoto","Users","props","pagesCount","Math","ceil","totalCount","pageSize","pages","i","push","map","setNewUsers","currentPage","selectedPage","users","user","id","name","avatar","photos","small","followed","follow","unfollow","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AAEA,IAAIC,KAAK,GAAIC,KAAD,IAAW;AAEnB,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAU,KAAKH,KAAL,CAAWI,UAAX,GAAwB,KAAKJ,KAAL,CAAWK,QAA7C,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,KAAK,CAACG,GAAN,CAAUF,CAAC,IAAI;AACX,wBAAO;AAAM,MAAA,OAAO,EAAE,MAAM,KAAKG,WAAL,CAAiBH,CAAjB,CAArB;AAA0C,MAAA,GAAG,EAAEA,CAA/C;AAAkD,MAAA,SAAS,EAAG,KAAKP,KAAL,CAAWW,WAAX,KAA2BJ,CAA5B,GAAiCV,CAAC,CAACe,YAAnC,GAAkD,EAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoHL,CAApH,CAAP;AACH,GAFD,CAFR,CADJ,EASK,KAAKP,KAAL,CAAWa,KAAX,CAAiBJ,GAAjB,CAAsBK,IAAD,IAAU;AAC5B,wBACI;AAAK,MAAA,SAAS,EAAEjB,CAAC,CAACiB,IAAlB;AAAwB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAL,GAAUD,IAAI,CAACE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAEnB,CAAC,CAACoB,MAAlB;AAA0B,MAAA,GAAG,EAAEH,IAAI,CAACI,MAAL,CAAYC,KAAZ,IAAqB,IAArB,GAA4BL,IAAI,CAACI,MAAL,CAAYC,KAAxC,GAAgDrB,SAA/E;AAA0F,MAAA,GAAG,EAAC,QAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAIKgB,IAAI,CAACM,QAAL,gBACK;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKpB,KAAL,CAAWqB,MAAX,CAAkBP,IAAI,CAACC,EAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADL,gBAEK;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKO,QAAL,CAAcR,IAAI,CAACC,EAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEANV,CAFJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,IAAI,CAACE,IAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,IAAI,CAACS,MAAX,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,uBAAN,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,oBAAN,CAJJ,CAXJ,CADJ;AAoBH,GArBA,CATL,CADJ;AAmCH,CA1CD;;AA4CA,eAAexB,KAAf","sourcesContent":["import React from 'react'\nimport s from './Users.module.css'\nimport userPhoto from '../../assets/images/default_icon.jpg'\n\nlet Users = (props) => {\n\n    let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    return (\n        <div>\n            <div>\n                {\n                    pages.map(i => {\n                        return <span onClick={() => this.setNewUsers(i)} key={i} className={(this.props.currentPage === i) ? s.selectedPage : ''}>{i}</span>\n                    })\n                }\n            </div>\n\n            {this.props.users.map((user) => {\n                return (\n                    <div className={s.user} key={user.id + user.name}>\n\n                        <div>\n                            <div>\n                                <img className={s.avatar} src={user.photos.small != null ? user.photos.small : userPhoto} alt='avatar' />\n                            </div>\n                            {user.followed\n                                ? <button onClick={() => this.props.follow(user.id)}>Друг</button>\n                                : <button onClick={() => this.unfollow(user.id)}>Не в друзьях</button>\n                            }\n                        </div>\n                        <div>\n                            <div>{user.name}</div>\n                            <div>{user.status}</div>\n                            <div>{\"user.location.country\"}</div>\n                            <div>{\"user.location.city\"}</div>\n                        </div>\n                    </div>\n                )\n            })\n            }\n        </div>\n    )\n}\n\nexport default Users"]},"metadata":{},"sourceType":"module"}