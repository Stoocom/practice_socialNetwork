{"ast":null,"code":"import { profileAPI } from \"../api/profileApi\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_USER_STATUS = 'SET_USER_STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hello people!',\n    countLikes: '15'\n  }, {\n    id: 2,\n    message: \"I'm hunter\",\n    countLikes: '20'\n  }, {\n    id: 3,\n    message: \"I'll stay good programmer\",\n    countLikes: '15'\n  }],\n  textArea: '',\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let body = state.textArea;\n      return { ...state,\n        textArea: '',\n        posts: [...state.posts, {\n          id: state.posts.length + 1,\n          message: body,\n          countLikes: 0\n        }]\n      };\n\n    case UPDATE_NEW_POST_TEXT:\n      return { ...state,\n        textArea: action.text\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_USER_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = newText => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    text: newText\n  };\n};\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\nexport const setUserStatus = status => {\n  return {\n    type: SET_USER_STATUS,\n    status\n  };\n};\nexport const getProfileThunkCreator = userId => {\n  return dispatch => {\n    profileAPI.getProfile(userId).then(response => {\n      //this.props.setLoading(false)\n      dispatch(setUserProfile(response.data));\n    });\n  };\n};\nexport const getStatusThunkCreator = userId => {\n  return dispatch => {\n    profileAPI.getStatus(userId).then(response => {\n      //this.props.setLoading(false)\n      dispatch(setUserStatus(response.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/profileReducer.js"],"names":["profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_USER_STATUS","initialState","posts","id","message","countLikes","textArea","profile","status","profileReducer","state","action","type","body","length","text","addPostActionCreator","updateNewPostTextActionCreator","newText","setUserProfile","setUserStatus","getProfileThunkCreator","userId","dispatch","getProfile","then","response","data","getStatusThunkCreator","getStatus"],"mappings":"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","sourcesContent":["import { profileAPI } from \"../api/profileApi\"\n\nconst ADD_POST = 'ADD-POST'\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_USER_STATUS = 'SET_USER_STATUS'\n\n\nlet initialState = {\n    posts: [\n        { id: 1, message: 'Hello people!', countLikes: '15' },\n        { id: 2, message: \"I'm hunter\", countLikes: '20' },\n        { id: 3, message: \"I'll stay good programmer\", countLikes: '15' },\n    ],\n    textArea: '',\n    profile: null,\n    status: '',\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let body = state.textArea;\n            return {\n                ...state,\n                textArea: '',\n                posts: [\n                    ...state.posts,\n                    {\n                        id: state.posts.length + 1,\n                        message: body,\n                        countLikes: 0\n                    }\n                ]\n            }\n        case UPDATE_NEW_POST_TEXT:\n            return {\n                ...state,\n                textArea: action.text\n            }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            }\n        case SET_USER_STATUS:\n            return {\n                ...state,\n                status: action.status\n            }\n        default:\n            return state\n    }\n}\n\nexport const addPostActionCreator = () => {\n    return { type: ADD_POST }\n}\nexport const updateNewPostTextActionCreator = (newText) => {\n    return { type: UPDATE_NEW_POST_TEXT, text: newText }\n}\nexport const setUserProfile = (profile) => {\n    return { type: SET_USER_PROFILE, profile }\n}\nexport const setUserStatus = (status) => {\n    return { type: SET_USER_STATUS, status }\n}\nexport const getProfileThunkCreator = (userId) => {\n    return dispatch => {\n        profileAPI.getProfile(userId)\n            .then(response => {\n                //this.props.setLoading(false)\n                dispatch(setUserProfile(response.data))\n            })\n    }\n}\nexport const getStatusThunkCreator = (userId) => {\n    return dispatch => {\n        profileAPI.getStatus(userId)\n            .then(response => {\n                //this.props.setLoading(false)\n                dispatch(setUserStatus(response.data))\n            })\n    }\n}\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}