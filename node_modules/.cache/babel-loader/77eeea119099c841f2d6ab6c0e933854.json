{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/common/Paginator/Paginator.jsx\";\nimport React, { useState } from 'react';\nimport s from '../../Users/Users.module.css';\n\nlet Paginator = ({\n  portionSize = 10,\n  ...props\n}) => {\n  console.log(props);\n  let pagesCount = Math.ceil(props.totalCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(2);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), pages.filter(numberPage => numberPage >= leftPortionPageNumber && numberPage <= rightPortionPageNumber).map(i => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => props.onPageChanged(i),\n      key: i,\n      className: props.currentPage === i ? s.selectedPage : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 28\n      }\n    }, i);\n  }));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","s","Paginator","portionSize","props","console","log","pagesCount","Math","ceil","totalCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","numberPage","map","onPageChanged","currentPage","selectedPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,8BAAd;;AAEA,IAAIC,SAAS,GAAG,CAAC;AAAEC,EAAAA,WAAW,GAAG,EAAhB;AAAqB,KAAGC;AAAxB,CAAD,KAAoC;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACM,UAAN,GAAmBN,KAAK,CAACO,QAAnC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGJ,WAAvB,CAAnB;AACA,MAAI,CAAEa,aAAF,EAAiBC,gBAAjB,IAAqCjB,QAAQ,CAAC,CAAD,CAAjD;AACA,MAAIkB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBb,WAAtB,GAAoC,CAAhE;AACA,MAAIgB,sBAAsB,GAAGH,aAAa,GAAGb,WAA7C;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKa,aAAa,GAAG,CAAhB,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,EAOKJ,KAAK,CACAQ,MADL,CACaC,UAAD,IAAgBA,UAAU,IAAIH,qBAAd,IAAuCG,UAAU,IAAIF,sBADjF,EAEKG,GAFL,CAEST,CAAC,IAAI;AACV,wBAAO;AAAM,MAAA,OAAO,EAAE,MAAMT,KAAK,CAACmB,aAAN,CAAoBV,CAApB,CAArB;AAA6C,MAAA,GAAG,EAAEA,CAAlD;AAAqD,MAAA,SAAS,EAAGT,KAAK,CAACoB,WAAN,KAAsBX,CAAvB,GAA4BZ,CAAC,CAACwB,YAA9B,GAA6C,EAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkHZ,CAAlH,CAAP;AACH,GAJD,CAPL,CAAP;AAcH,CA3BD;;AA6BA,eAAeX,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport s from '../../Users/Users.module.css'\n\nlet Paginator = ({ portionSize = 10 , ...props}) => {\n    console.log(props)\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize )\n    let [ portionNumber, setPortionNumber] = useState(2)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return <div>\n            { \n                portionNumber > 1 && \n                <button></button>\n            }\n\n            {\n                pages\n                    .filter((numberPage) => numberPage >= leftPortionPageNumber && numberPage <= rightPortionPageNumber)\n                    .map(i => {\n                    return <span onClick={() => props.onPageChanged(i)} key={i} className={(props.currentPage === i) ? s.selectedPage : ''}>{i}</span>\n                })\n            }\n        </div>\n}\n\nexport default Paginator"]},"metadata":{},"sourceType":"module"}