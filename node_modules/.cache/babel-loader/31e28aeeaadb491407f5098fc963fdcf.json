{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hello people!',\n        countLikes: '15'\n      }, {\n        id: 2,\n        message: \"I'm hunter\",\n        countLikes: '20'\n      }, {\n        id: 3,\n        message: \"I'll stay good programmer\",\n        countLikes: '15'\n      }],\n      textArea: ''\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How are you?'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Alexander'\n      }, {\n        id: 2,\n        name: 'Natasha'\n      }, {\n        id: 3,\n        name: 'Katya'\n      }, {\n        id: 4,\n        name: 'Maxim'\n      }, {\n        id: 5,\n        name: 'Pasha'\n      }]\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _callSubscriber() {\n    console.log('State changed');\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  addPost() {\n    let newPost = {\n      id: this._state.profilePage.posts.length + 1,\n      message: this._state.profilePage.textArea,\n      countLikes: 0\n    };\n\n    this._state.profilePage.posts.push(newPost);\n\n    this._state.profilePage.textArea = '';\n\n    this._callSubscriber(this._state);\n  },\n\n  updateNewPostText(text) {\n    this._state.profilePage.textArea = text;\n\n    this._callSubscriber(this._state);\n  },\n\n  dispatch(action) {\n    // { type: 'ADD-POST'}\n    switch (action) {\n      case 'ADD-POST':\n        let newPost = {\n          id: this._state.profilePage.posts.length + 1,\n          message: this._state.profilePage.textArea,\n          countLikes: 0\n        };\n\n        this._state.profilePage.posts.push(newPost);\n\n        this._state.profilePage.textArea = '';\n\n        this._callSubscriber(this._state);\n\n      default:\n        return state;\n    }\n  }\n\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/state.js"],"names":["store","_state","profilePage","posts","id","message","countLikes","textArea","dialogsPage","messages","dialogs","name","getState","_callSubscriber","console","log","subscribe","observer","addPost","newPost","length","push","updateNewPostText","text","dispatch","action","state","window"],"mappings":"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","sourcesContent":["let store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: 'Hello people!', countLikes: '15' },\n                { id: 2, message: \"I'm hunter\", countLikes: '20' },\n                { id: 3, message: \"I'll stay good programmer\", countLikes: '15' },\n            ],\n            textArea: '',\n        },\n    \n        dialogsPage: {\n            messages: [\n                { id: 1, message: 'Hi' },\n                { id: 2, message: 'How are you?' },\n                { id: 3, message: 'Yo' },\n            ],\n            dialogs: [\n                { id: 1, name: 'Alexander' },\n                { id: 2, name: 'Natasha' },\n                { id: 3, name: 'Katya' },\n                { id: 4, name: 'Maxim' },\n                { id: 5, name: 'Pasha' },\n            ],\n        }\n    \n    },\n\n    getState() {\n        return this._state\n    },\n    _callSubscriber() {\n        console.log('State changed');\n    },subscribe(observer){\n        this._callSubscriber = observer\n    },\n\n    addPost() {   \n        let newPost = {\n            id: this._state.profilePage.posts.length + 1,\n            message: this._state.profilePage.textArea,\n            countLikes: 0\n        }\n        this._state.profilePage.posts.push(newPost)\n        this._state.profilePage.textArea = ''\n        this._callSubscriber(this._state)\n    },\n    updateNewPostText(text) {   \n        this._state.profilePage.textArea = text;\n        this._callSubscriber(this._state)\n    },\n    dispatch(action) { // { type: 'ADD-POST'}\n        switch (action) {\n            case 'ADD-POST':\n                let newPost = {\n                    id: this._state.profilePage.posts.length + 1,\n                    message: this._state.profilePage.textArea,\n                    countLikes: 0\n                }\n                this._state.profilePage.posts.push(newPost)\n                this._state.profilePage.textArea = ''\n                this._callSubscriber(this._state)\n            default:\n                return state\n        }\n    }\n}\n\nexport default store\nwindow.store = store\n\n"]},"metadata":{},"sourceType":"module"}