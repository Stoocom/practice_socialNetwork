{"ast":null,"code":"import _objectSpread from\"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{getLoginThunkCreator}from\"./authReducer\";var SET_INITIALIZED_SUCCESS='SET_INITIALIZED_SUCCESS';var initialState={initialized:false};var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_INITIALIZED_SUCCESS:return _objectSpread({},state,{initialized:true});default:return state;}};export var initializedSuccess=function initializedSuccess(){return{type:SET_INITIALIZED_SUCCESS};};export var initializeApp=function initializeApp(){return function(dispatch){var promise=dispatch(getLoginThunkCreator());Promise.all([promise]).then(function(){dispatch(initializedSuccess());});};};export default appReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/appReducer.js"],"names":["getLoginThunkCreator","SET_INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"wLAAA,OAASA,oBAAT,KAAqC,eAArC,CAGA,GAAMC,CAAAA,uBAAuB,CAAG,yBAAhC,CAEA,GAAIC,CAAAA,YAAY,CAAG,CACfC,WAAW,CAAE,KADE,CAAnB,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CACjD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,uBAAL,CACI,wBACOI,KADP,EAEIF,WAAW,CAAE,IAFjB,GAIJ,QACI,MAAOE,CAAAA,KAAP,CAPR,CASH,CAVD,CAYA,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAO,CAAED,IAAI,CAAEN,uBAAR,CAAP,EAA3B,CAEP,MAAO,IAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAAAC,QAAQ,CAAI,CAC3C,GAAIC,CAAAA,OAAO,CAAGD,QAAQ,CAACV,oBAAoB,EAArB,CAAtB,CACAY,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACCG,IADD,CACM,UAAM,CACRJ,QAAQ,CAACF,kBAAkB,EAAnB,CAAR,CACH,CAHD,EAIH,CAN4B,EAAtB,CASP,cAAeJ,CAAAA,UAAf","sourcesContent":["import { getLoginThunkCreator } from \"./authReducer\"\n\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS'\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            }\n        default:\n            return state\n    }\n}\n\nexport const initializedSuccess = () => ({ type: SET_INITIALIZED_SUCCESS })\n\nexport const initializeApp = () => dispatch => {\n    let promise = dispatch(getLoginThunkCreator())\n    Promise.all([promise])\n    .then(() => {\n        dispatch(initializedSuccess())\n    })\n}\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}