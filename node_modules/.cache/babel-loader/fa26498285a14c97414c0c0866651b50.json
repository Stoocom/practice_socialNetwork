{"ast":null,"code":"import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = state => {\n  console.log(state);\n  return {\n    dialogs: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessageActionCreator: () => {\n      dispatch(addMessageActionCreator());\n    },\n    updateNewMessageText: body => {\n      dispatch(updateNewMessageTextActionCreator(body));\n    }\n  };\n};\n\nconst MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default MyDialogsContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Dialogs/MyDialogsContainer.jsx"],"names":["React","addMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","connect","mapStateToProps","state","console","log","dialogs","dialogsPage","mapDispatchToProps","dispatch","updateNewMessageText","body","MyDialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,EAAkCC,iCAAlC,QAA2E,4BAA3E;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACHG,IAAAA,OAAO,EAAEH,KAAK,CAACI;AADZ,GAAP;AAGH,CALD;;AAMA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHX,IAAAA,uBAAuB,EAAE,MAAM;AAAEW,MAAAA,QAAQ,CAACX,uBAAuB,EAAxB,CAAR;AAAqC,KADnE;AAEHY,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAAEF,MAAAA,QAAQ,CAACV,iCAAiC,CAACY,IAAD,CAAlC,CAAR;AAAmD;AAFlF,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGX,OAAO,CAACC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CR,OAA7C,CAA3B;AAEA,eAAeY,kBAAf","sourcesContent":["import React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        dialogs: state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessageActionCreator: () => { dispatch(addMessageActionCreator()) },\n        updateNewMessageText: (body) => { dispatch(updateNewMessageTextActionCreator(body)) }\n    }\n}\n\nconst MyDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\nexport default MyDialogsContainer"]},"metadata":{},"sourceType":"module"}