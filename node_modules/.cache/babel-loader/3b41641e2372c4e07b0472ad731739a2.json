{"ast":null,"code":"import { authAPI } from \"../api/authApi\"; //import { stopSubmit } from \"redux-form\"\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => {\n  return {\n    type: SET_INITIALIZED_SUCCESS\n  };\n};\nexport const initializeApp = () => dispatch => {\n  let dispatchResult = dispatch(getLoginThunkCreator());\n  debugger;\n  dispatch(initializedSuccess());\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/redux/appReducer.js"],"names":["authAPI","SET_INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","dispatchResult","getLoginThunkCreator"],"mappings":"AAAA,SAASA,OAAT,QAAwB,gBAAxB,C,CACA;;AAEA,MAAMC,uBAAuB,GAAG,yBAAhC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,uBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACpC,SAAO;AAAED,IAAAA,IAAI,EAAEN;AAAR,GAAP;AACH,CAFM;AAIP,OAAO,MAAMQ,aAAa,GAAG,MAAMC,QAAQ,IAAI;AAC3C,MAAIC,cAAc,GAAGD,QAAQ,CAACE,oBAAoB,EAArB,CAA7B;AACA;AACAF,EAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,CAJM;AASP,eAAeJ,UAAf","sourcesContent":["import { authAPI } from \"../api/authApi\"\n//import { stopSubmit } from \"redux-form\"\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS'\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            }\n        default:\n            return state\n    }\n}\n\nexport const initializedSuccess = () => {\n    return { type: SET_INITIALIZED_SUCCESS }\n}\n\nexport const initializeApp = () => dispatch => {\n    let dispatchResult = dispatch(getLoginThunkCreator())\n    debugger\n    dispatch(initializedSuccess())\n}\n\n\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}