{"ast":null,"code":"var _jsxFileName = \"/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/UsersContainer.jsx\";\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalCount, setLoading, toggleFollowingProgress, getUsersThunkCreator } from '../../redux/usersReducer';\nimport Users from './Users.jsx';\nimport axios from 'axios';\nimport React from 'react';\nimport Loader from '../common/Preloader/Loader';\nimport { usersAPI } from '../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.unFollow = id => {\n      this.props.unfollow(id);\n    };\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize); // this.props.setLoading(true)\n      // this.props.setCurrentPage(pageNumber)\n      // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n      //         this.props.setLoading(false)\n      //         this.props.setUsers(data.items)\n      //     })\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize); // this.props.setLoading(true)\n    // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n    //         this.props.setLoading(false)\n    //         this.props.setUsers(data.items)\n    //         this.props.setTotalCount(data.totalCount / 300)\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(Users, {\n      totalCount: this.props.totalCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unFollow: this.unFollow,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalCount: state.usersPage.totalCount,\n    currentPage: state.usersPage.currentPage,\n    isLoading: state.usersPage.isLoading,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (id) => { dispatch(followAC(id)) },\n//         unfollow: (id) => { dispatch(unfollowAC(id)) },\n//         setUsers: (users) => { dispatch(setUsersAC(users)) },\n//         setCurrentPage: (pageNumber) => { dispatch(setCurrentPageAC(pageNumber)) },\n//         setTotalCount: (totalCount) => { dispatch(setTotalCountAC(totalCount)) },\n//         setLoading: (isLoading) => { dispatch(setLoadingAC(isLoading)) },\n//     }\n// }\n// const UsersMainContainer = connect(mapStateToProps, {\n//     follow: followAC,\n//     unfollow: unfollowAC,\n//     setUsers: setUsers,\n//     setCurrentPage: setCurrentPage,\n//     setTotalCount: setTotalCount,\n//     setLoading: setLoading,\n// })(UsersContainer)\n\n\nconst UsersMainContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalCount,\n  toggleFollowingProgress,\n  getUsers: getUsersThunkCreator\n})(UsersContainer);\nexport default UsersMainContainer;","map":{"version":3,"sources":["/Users/stoocom/Desktop/Geekbrains/Project/Kamasutra/social_network/src/components/Users/UsersContainer.jsx"],"names":["connect","follow","unfollow","setUsers","setCurrentPage","setTotalCount","setLoading","toggleFollowingProgress","getUsersThunkCreator","Users","axios","React","Loader","usersAPI","UsersContainer","Component","unFollow","id","props","onPageChanged","pageNumber","getUsers","pageSize","componentDidMount","currentPage","render","isLoading","totalCount","users","followingInProgress","mapStateToProps","state","usersPage","UsersMainContainer"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalCount, setLoading, toggleFollowingProgress, getUsersThunkCreator } from '../../redux/usersReducer';\nimport Users from './Users.jsx'\nimport axios from 'axios'\nimport React from 'react'\nimport Loader from '../common/Preloader/Loader';\nimport { usersAPI } from '../../api/api';\n\n\nclass UsersContainer extends React.Component {\n    unFollow = (id) => {\n        this.props.unfollow(id)\n    }\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n        // this.props.setLoading(true)\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n        //         this.props.setLoading(false)\n        //         this.props.setUsers(data.items)\n        //         this.props.setTotalCount(data.totalCount / 300)\n        // })\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize)\n        // this.props.setLoading(true)\n        // this.props.setCurrentPage(pageNumber)\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        //         this.props.setLoading(false)\n        //         this.props.setUsers(data.items)\n        //     })\n    }\n    \n    render() {\n\n        return (\n            <>\n                {this.props.isLoading ? <Loader/> :\n                <Users\n                    totalCount={this.props.totalCount}\n                    pageSize={this.props.pageSize}\n                    currentPage={this.props.currentPage}\n                    onPageChanged={this.onPageChanged}\n                    users={this.props.users}\n                    follow={this.props.follow}\n                    unFollow={this.unFollow}\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\n                    followingInProgress={this.props.followingInProgress}\n                />\n        }\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalCount: state.usersPage.totalCount,\n        currentPage: state.usersPage.currentPage,\n        isLoading: state.usersPage.isLoading,\n        followingInProgress: state.usersPage.followingInProgress,\n    }\n}\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (id) => { dispatch(followAC(id)) },\n//         unfollow: (id) => { dispatch(unfollowAC(id)) },\n//         setUsers: (users) => { dispatch(setUsersAC(users)) },\n//         setCurrentPage: (pageNumber) => { dispatch(setCurrentPageAC(pageNumber)) },\n//         setTotalCount: (totalCount) => { dispatch(setTotalCountAC(totalCount)) },\n//         setLoading: (isLoading) => { dispatch(setLoadingAC(isLoading)) },\n//     }\n// }\n\n// const UsersMainContainer = connect(mapStateToProps, {\n//     follow: followAC,\n//     unfollow: unfollowAC,\n//     setUsers: setUsers,\n//     setCurrentPage: setCurrentPage,\n//     setTotalCount: setTotalCount,\n//     setLoading: setLoading,\n// })(UsersContainer)\n\nconst UsersMainContainer = connect(mapStateToProps, {\n    follow, unfollow, setUsers,setCurrentPage, setTotalCount,\n    toggleFollowingProgress, getUsers: getUsersThunkCreator\n})(UsersContainer)\n\nexport default UsersMainContainer"]},"metadata":{},"sourceType":"module"}